Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    main.o(.text) refers to system_stm32f10x.o(.text) for SystemCoreClockUpdate
    main.o(.text) refers to rtx_kernel.o(.text) for osKernelInitialize
    main.o(.text) refers to rtx_thread.o(.text) for osThreadNew
    main.o(.text) refers to thread.o(.text) for Init_Thread
    main.o(.ARM.exidx) refers to main.o(.text) for [Anonymous Symbol]
    thread.o(.text) refers to rtx_thread.o(.text) for osThreadNew
    thread.o(.text) refers to thread.o(.bss.tid_Thread) for tid_Thread
    thread.o(.text) refers to thread.o(.bss.x) for x
    thread.o(.text) refers to rtx_delay.o(.text) for osDelay
    thread.o(.ARM.exidx) refers to thread.o(.text) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_thread.o(.text) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text) refers to rtx_evr.o(.text) for EvrRtxDelay
    rtx_delay.o(.text) refers to rtx_thread.o(.text) for osRtxThreadWaitEnter
    rtx_delay.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx) refers to rtx_delay.o(.text) for [Anonymous Symbol]
    rtx_evflags.o(.text) refers to rtx_evr.o(.text) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_evflags.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_evflags.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListRemove
    rtx_evflags.o(.ARM.exidx) refers to rtx_evflags.o(.text) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx) refers to rtx_evr.o(.text) for [Anonymous Symbol]
    rtx_kernel.o(.text) refers to rtx_evr.o(.text) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_kernel.o(.text) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text) refers to os_systick.o(.text) for OS_Tick_GetCount
    rtx_kernel.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryInit
    rtx_kernel.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolInit
    rtx_kernel.o(.text) refers to rtx_thread.o(.text) for osRtxThreadStartup
    rtx_kernel.o(.text) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx) refers to rtx_kernel.o(.text) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text) refers to rtx_kernel.o(.text) for osKernelInitialize
    rtx_lib.o(.text) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text) refers to rtx_thread.o(.text) for osThreadGetId
    rtx_lib.o(.text) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(.text) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_kernel.o(.text) for osKernelGetState
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_release) refers to rtx_kernel.o(.text) for osKernelGetState
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text) refers to rtx_evr.o(.text) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx) refers to rtx_memory.o(.text) for [Anonymous Symbol]
    rtx_mempool.o(.text) refers to rtx_evr.o(.text) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_mempool.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_mempool.o(.text) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_mempool.o(.ARM.exidx) refers to rtx_mempool.o(.text) for [Anonymous Symbol]
    rtx_msgqueue.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text) refers to rtx_evr.o(.text) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_msgqueue.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx) refers to rtx_msgqueue.o(.text) for [Anonymous Symbol]
    rtx_mutex.o(.text) refers to rtx_evr.o(.text) for EvrRtxMutexReleased
    rtx_mutex.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_mutex.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx) refers to rtx_mutex.o(.text) for [Anonymous Symbol]
    rtx_semaphore.o(.text) refers to rtx_evr.o(.text) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_semaphore.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_semaphore.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_semaphore.o(.ARM.exidx) refers to rtx_semaphore.o(.text) for [Anonymous Symbol]
    rtx_system.o(.text) refers to os_systick.o(.text) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text) refers to rtx_thread.o(.text) for osRtxThreadDelayTick
    rtx_system.o(.text) refers to rtx_evr.o(.text) for EvrRtxThreadPreempted
    rtx_system.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx) refers to rtx_system.o(.text) for [Anonymous Symbol]
    rtx_thread.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text) refers to rtx_evr.o(.text) for EvrRtxDelayCompleted
    rtx_thread.o(.text) refers to rtx_mutex.o(.text) for osRtxMutexOwnerRestore
    rtx_thread.o(.text) refers to rtx_lib.o(.text) for osRtxThreadBeforeFree
    rtx_thread.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryFree
    rtx_thread.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolFree
    rtx_thread.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text) refers to rtx_config.o(.text) for osRtxIdleThread
    rtx_thread.o(.text) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_thread.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_thread.o(.ARM.exidx) refers to rtx_thread.o(.text) for [Anonymous Symbol]
    rtx_timer.o(.text) refers to rtx_msgqueue.o(.text) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_timer.o(.text) refers to rtx_evr.o(.text) for EvrRtxTimerCallback
    rtx_timer.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx) refers to rtx_timer.o(.text) for [Anonymous Symbol]
    os_systick.o(.text) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx) refers to os_systick.o(.text) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx) refers to rtx_config.o(.text) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx) refers to system_stm32f10x.o(.text) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.ARM.exidx), (16 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing thread.o(.ARM.exidx), (16 bytes).
    Removing irq_armv7m.o(.rodata), (2 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.ARM.exidx), (32 bytes).
    Removing rtx_evflags.o(.text), (1802 bytes).
    Removing rtx_evflags.o(.ARM.exidx), (120 bytes).
    Removing rtx_evr.o(.ARM.exidx), (1488 bytes).
    Removing rtx_kernel.o(.ARM.exidx), (256 bytes).
    Removing rtx_lib.o(.ARM.exidx), (24 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.ARM.exidx), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx), (176 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx), (176 bytes).
    Removing rtx_mutex.o(.ARM.exidx), (112 bytes).
    Removing rtx_semaphore.o(.text), (1230 bytes).
    Removing rtx_semaphore.o(.ARM.exidx), (104 bytes).
    Removing rtx_system.o(.ARM.exidx), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx), (632 bytes).
    Removing rtx_timer.o(.ARM.exidx), (120 bytes).
    Removing os_systick.o(.ARM.exidx), (72 bytes).
    Removing rtx_config.o(.ARM.exidx), (16 bytes).
    Removing system_stm32f10x.o(.ARM.exidx), (16 bytes).

28 unused section(s) (total 6522 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    FPU_USED                                 0x00000000   Number         0  irq_armv7m.o ABSOLUTE
    RTE/Device/STM32F103RB/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    Thread.c                                 0x00000000   Number         0  thread.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000150   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x0800016c   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x08000170   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800018c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800018e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000190   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000192   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000194   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000194   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000194   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800019a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x080001a2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001a6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001a6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001ae   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001b0   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001b0   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001b4   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x080001bc   Section        0  main.o(.text)
    app_main                                 0x080001dd   Thumb Code     6  main.o(.text)
    [Anonymous Symbol]                       0x080001e4   Section        0  thread.o(.text)
    [Anonymous Symbol]                       0x08000228   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x08000250   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x08000260   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x08000284   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x0800028c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x0800029c   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x0800029e   Number         0  irq_armv7m.o(.text)
    [Anonymous Symbol]                       0x080002e8   Section        0  rtx_delay.o(.text)
    svcRtxDelay                              0x08000359   Thumb Code    52  rtx_delay.o(.text)
    svcRtxDelayUntil                         0x0800038d   Thumb Code    70  rtx_delay.o(.text)
    [Anonymous Symbol]                       0x080003d4   Section        0  rtx_evr.o(.text)
    [Anonymous Symbol]                       0x080006bc   Section        0  rtx_kernel.o(.text)
    svcRtxKernelGetInfo                      0x0800078d   Thumb Code    78  rtx_kernel.o(.text)
    svcRtxKernelGetState                     0x08000819   Thumb Code    22  rtx_kernel.o(.text)
    svcRtxKernelRestoreLock                  0x08000969   Thumb Code    68  rtx_kernel.o(.text)
    svcRtxKernelDestroyClass                 0x08000aa1   Thumb Code     6  rtx_kernel.o(.text)
    svcRtxKernelGetTickCount                 0x08000add   Thumb Code    20  rtx_kernel.o(.text)
    svcRtxKernelGetTickFreq                  0x08000b25   Thumb Code    22  rtx_kernel.o(.text)
    svcRtxKernelGetSysTimerCount             0x08000b8d   Thumb Code    50  rtx_kernel.o(.text)
    svcRtxKernelGetSysTimerFreq              0x08000bf1   Thumb Code    16  rtx_kernel.o(.text)
    svcRtxKernelInitialize                   0x08000c01   Thumb Code   348  rtx_kernel.o(.text)
    svcRtxKernelStart                        0x08000d5d   Thumb Code   158  rtx_kernel.o(.text)
    svcRtxKernelLock                         0x08000dfd   Thumb Code    58  rtx_kernel.o(.text)
    svcRtxKernelUnlock                       0x08000e39   Thumb Code    58  rtx_kernel.o(.text)
    svcRtxKernelSuspend                      0x08000e75   Thumb Code   100  rtx_kernel.o(.text)
    svcRtxKernelResume                       0x08000ed9   Thumb Code   152  rtx_kernel.o(.text)
    svcRtxKernelProtect                      0x08000f71   Thumb Code     6  rtx_kernel.o(.text)
    [Anonymous Symbol]                       0x08000f78   Section        0  rtx_lib.o(.text)
    [Anonymous Symbol]                       0x08001010   Section        0  rtx_memory.o(.text)
    [Anonymous Symbol]                       0x08001128   Section        0  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetName                  0x0800129d   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetCapacity              0x08001461   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetBlockSize             0x080014c5   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetCount                 0x08001529   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetSpace                 0x08001595   Thumb Code    42  rtx_mempool.o(.text)
    svcRtxMemoryPoolNew                      0x080015f9   Thumb Code   462  rtx_mempool.o(.text)
    osRtxMemoryPoolPostProcess               0x080017c9   Thumb Code   106  rtx_mempool.o(.text)
    svcRtxMemoryPoolAlloc                    0x08001835   Thumb Code   168  rtx_mempool.o(.text)
    svcRtxMemoryPoolFree                     0x080018dd   Thumb Code   246  rtx_mempool.o(.text)
    svcRtxMemoryPoolDelete                   0x080019d5   Thumb Code   212  rtx_mempool.o(.text)
    [Anonymous Symbol]                       0x08001aa8   Section        0  rtx_msgqueue.o(.text)
    svcRtxMessageQueueNew                    0x08001ad5   Thumb Code   362  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetName                0x08001cc1   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetCapacity            0x08001ea1   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetMsgSize             0x08001f05   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetCount               0x08001f69   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetSpace               0x08001fd5   Thumb Code    42  rtx_msgqueue.o(.text)
    osRtxMessageQueuePostProcess             0x08002071   Thumb Code   444  rtx_msgqueue.o(.text)
    svcRtxMessageQueuePut                    0x0800222d   Thumb Code   328  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGet                    0x08002375   Thumb Code   448  rtx_msgqueue.o(.text)
    svcRtxMessageQueueReset                  0x08002535   Thumb Code   358  rtx_msgqueue.o(.text)
    svcRtxMessageQueueDelete                 0x0800269d   Thumb Code   136  rtx_msgqueue.o(.text)
    [Anonymous Symbol]                       0x08002724   Section        0  rtx_mutex.o(.text)
    svcRtxMutexGetName                       0x08002851   Thumb Code    34  rtx_mutex.o(.text)
    svcRtxMutexNew                           0x0800294d   Thumb Code   164  rtx_mutex.o(.text)
    svcRtxMutexAcquire                       0x080029f1   Thumb Code   218  rtx_mutex.o(.text)
    svcRtxMutexRelease                       0x08002acd   Thumb Code   234  rtx_mutex.o(.text)
    svcRtxMutexGetOwner                      0x08002bb9   Thumb Code    38  rtx_mutex.o(.text)
    svcRtxMutexDelete                        0x08002be1   Thumb Code   210  rtx_mutex.o(.text)
    [Anonymous Symbol]                       0x08002cb4   Section        0  rtx_system.o(.text)
    [Anonymous Symbol]                       0x08002e5c   Section        0  rtx_thread.o(.text)
    osRtxThreadFree                          0x08003451   Thumb Code   102  rtx_thread.o(.text)
    svcRtxThreadNew                          0x08003509   Thumb Code   600  rtx_thread.o(.text)
    svcRtxThreadGetName                      0x080037e1   Thumb Code    34  rtx_thread.o(.text)
    svcRtxThreadGetClass                     0x08003829   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadGetZone                      0x08003855   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadGetId                        0x08003891   Thumb Code    22  rtx_thread.o(.text)
    svcRtxThreadSuspendClass                 0x08003bc9   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadResumeClass                  0x08003c29   Thumb Code     6  rtx_thread.o(.text)
    osThreadEntry                            0x08003e69   Thumb Code     6  rtx_thread.o(.text)
    osRtxThreadPostProcess                   0x08003e71   Thumb Code   156  rtx_thread.o(.text)
    svcRtxThreadGetState                     0x08003f0d   Thumb Code    36  rtx_thread.o(.text)
    svcRtxThreadGetStackSize                 0x08003f31   Thumb Code    34  rtx_thread.o(.text)
    svcRtxThreadGetStackSpace                0x08003f55   Thumb Code    82  rtx_thread.o(.text)
    svcRtxThreadSetPriority                  0x08003fa9   Thumb Code   184  rtx_thread.o(.text)
    svcRtxThreadGetPriority                  0x08004061   Thumb Code    40  rtx_thread.o(.text)
    svcRtxThreadYield                        0x08004089   Thumb Code   138  rtx_thread.o(.text)
    svcRtxThreadSuspend                      0x08004115   Thumb Code   342  rtx_thread.o(.text)
    svcRtxThreadResume                       0x0800426d   Thumb Code   152  rtx_thread.o(.text)
    svcRtxThreadDetach                       0x08004305   Thumb Code   108  rtx_thread.o(.text)
    svcRtxThreadJoin                         0x08004371   Thumb Code   286  rtx_thread.o(.text)
    svcRtxThreadExit                         0x08004491   Thumb Code   196  rtx_thread.o(.text)
    svcRtxThreadTerminate                    0x08004555   Thumb Code   412  rtx_thread.o(.text)
    svcRtxThreadFeedWatchdog                 0x080046f1   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadProtectPrivileged            0x080046f9   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadSetAffinityMask              0x08004701   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadGetAffinityMask              0x08004709   Thumb Code     4  rtx_thread.o(.text)
    svcRtxThreadGetCount                     0x0800470d   Thumb Code    58  rtx_thread.o(.text)
    svcRtxThreadEnumerate                    0x08004749   Thumb Code   122  rtx_thread.o(.text)
    svcRtxThreadFlagsSet                     0x080047c5   Thumb Code   320  rtx_thread.o(.text)
    svcRtxThreadFlagsClear                   0x08004905   Thumb Code    82  rtx_thread.o(.text)
    svcRtxThreadFlagsGet                     0x08004959   Thumb Code    36  rtx_thread.o(.text)
    svcRtxThreadFlagsWait                    0x0800497d   Thumb Code   230  rtx_thread.o(.text)
    [Anonymous Symbol]                       0x08004a64   Section        0  rtx_timer.o(.text)
    osRtxTimerTick                           0x08004a8d   Thumb Code   198  rtx_timer.o(.text)
    svcRtxTimerGetName                       0x08004c0d   Thumb Code    34  rtx_timer.o(.text)
    svcRtxTimerNew                           0x08004d09   Thumb Code   202  rtx_timer.o(.text)
    svcRtxTimerStart                         0x08004dd5   Thumb Code   194  rtx_timer.o(.text)
    svcRtxTimerStop                          0x08004e99   Thumb Code    94  rtx_timer.o(.text)
    svcRtxTimerIsRunning                     0x08004ef9   Thumb Code    34  rtx_timer.o(.text)
    svcRtxTimerDelete                        0x08004f1d   Thumb Code   118  rtx_timer.o(.text)
    [Anonymous Symbol]                       0x08004f94   Section        0  os_systick.o(.text)
    [Anonymous Symbol]                       0x0800509c   Section        0  rtx_config.o(.text)
    .text                                    0x080050a4   Section       64  startup_stm32f10x_md.o(.text)
    [Anonymous Symbol]                       0x080050e4   Section        0  system_stm32f10x.o(.text)
    .text                                    0x08005252   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080052dc   Section       16  aeabi_memset4.o(.text)
    .text                                    0x080052ec   Section       68  rt_memclr.o(.text)
    .text                                    0x08005330   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800537e   Section        0  heapauxi.o(.text)
    .text                                    0x08005384   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080053e8   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08005432   Section        0  exit.o(.text)
    .text                                    0x08005444   Section        8  libspace.o(.text)
    .text                                    0x0800544c   Section        0  sys_exit.o(.text)
    .text                                    0x08005458   Section        2  use_no_semi.o(.text)
    .text                                    0x0800545a   Section        0  indicate_semi.o(.text)
    __tagsym$$used.1                         0x0800545c   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x0800545c   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08005490   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08005490   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08005498   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08005498   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080054b8   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080054b8   Section        0  rtx_lib.o(.text._mutex_release)
    __tagsym$$used.4                         0x080054e8   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x08005558   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x080055a4   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x080055a4   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x080055c8   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x080055c8   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x080055e0   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x080055e0   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08005604   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x08005604   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss                                     0x200000a8   Section       96  libspace.o(.bss)
    os_isr_queue                             0x20000108   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000108   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000148   Data        4096  rtx_lib.o(.bss.os)
    PendST                                   0x20001148   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20001148   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x2000114c   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x2000114c   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x2000115c   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x2000133c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x2000133c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20001370   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20001370   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200013c0   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200013c0   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001410   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20001460   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20001460   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20001660   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20001660   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20001860   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20001860   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x20001870   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20001870   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20001a70   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20001a70   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20001e70   Data           0  startup_stm32f10x_md.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080000ff   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000151   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x0800016d   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x08000171   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800018d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000191   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000195   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000195   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000195   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800019b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x080001a3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001af   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001b5   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    main                                     0x080001bd   Thumb Code    30  main.o(.text)
    Init_Thread                              0x080001e5   Thumb Code    44  thread.o(.text)
    Thread                                   0x08000211   Thumb Code    24  thread.o(.text)
    SVC_Handler                              0x08000229   Thumb Code   146  irq_armv7m.o(.text)
    PendSV_Handler                           0x080002bb   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x080002cb   Thumb Code    16  irq_armv7m.o(.text)
    osDelay                                  0x080002e9   Thumb Code    54  rtx_delay.o(.text)
    osDelayUntil                             0x08000321   Thumb Code    54  rtx_delay.o(.text)
    EvrRtxMemoryInit                         0x080003d5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryAlloc                        0x080003d9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryFree                         0x080003dd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryBlockInit                    0x080003e1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryBlockAlloc                   0x080003e5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryBlockFree                    0x080003e9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelError                        0x080003ed   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelInitialize                   0x080003f1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelInitialized                  0x080003f5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelGetInfo                      0x080003f9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelInfoRetrieved                0x080003fd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelGetState                     0x08000401   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelStart                        0x08000405   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelStarted                      0x08000409   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelLock                         0x0800040d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelLocked                       0x08000411   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelUnlock                       0x08000415   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelUnlocked                     0x08000419   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelRestoreLock                  0x0800041d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelLockRestored                 0x08000421   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelSuspend                      0x08000425   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelSuspended                    0x08000429   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelResume                       0x0800042d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelResumed                      0x08000431   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelProtect                      0x08000435   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelProtected                    0x08000439   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelGetTickCount                 0x0800043d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelGetTickFreq                  0x08000441   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelGetSysTimerCount             0x08000445   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelGetSysTimerFreq              0x08000449   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelErrorNotify                  0x0800044d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxKernelDestroyClass                 0x08000451   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadError                        0x08000455   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadNew                          0x08000459   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadCreated                      0x0800045d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetName                      0x08000461   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetClass                     0x08000465   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetZone                      0x08000469   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetId                        0x0800046d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetState                     0x08000471   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetStackSize                 0x08000475   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetStackSpace                0x08000479   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadSetPriority                  0x0800047d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadPriorityUpdated              0x08000481   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetPriority                  0x08000485   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadYield                        0x08000489   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadSuspend                      0x0800048d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadSuspended                    0x08000491   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadResume                       0x08000495   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadResumed                      0x08000499   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadDetach                       0x0800049d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadDetached                     0x080004a1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadJoin                         0x080004a5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadJoinPending                  0x080004a9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadJoined                       0x080004ad   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadBlocked                      0x080004b1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadUnblocked                    0x080004b5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadPreempted                    0x080004b9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadSwitched                     0x080004bd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadExit                         0x080004c1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadTerminate                    0x080004c5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadDestroyed                    0x080004c9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFeedWatchdog                 0x080004cd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFeedWatchdogDone             0x080004d1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadProtectPrivileged            0x080004d5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadPrivilegedProtected          0x080004d9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadGetCount                     0x080004dd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadEnumerate                    0x080004e1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadSuspendClass                 0x080004e5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadResumeClass                  0x080004e9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadTerminateZone                0x080004ed   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadWatchdogExpired              0x080004f1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsError                   0x080004f5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsSet                     0x080004f9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsSetDone                 0x080004fd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsClear                   0x08000501   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsClearDone               0x08000505   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsGet                     0x08000509   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsWait                    0x0800050d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitPending             0x08000511   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitTimeout             0x08000515   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitCompleted           0x08000519   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitNotCompleted        0x0800051d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxDelayError                         0x08000521   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxDelay                              0x08000525   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxDelayUntil                         0x08000529   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxDelayStarted                       0x0800052d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxDelayUntilStarted                  0x08000531   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxDelayCompleted                     0x08000535   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerError                         0x08000539   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerCallback                      0x0800053d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerNew                           0x08000541   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerCreated                       0x08000545   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerGetName                       0x08000549   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerStart                         0x0800054d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerStarted                       0x08000551   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerStop                          0x08000555   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerStopped                       0x08000559   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerIsRunning                     0x0800055d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerDelete                        0x08000561   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxTimerDestroyed                     0x08000565   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsError                    0x08000569   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsNew                      0x0800056d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsCreated                  0x08000571   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsGetName                  0x08000575   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsSet                      0x08000579   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsSetDone                  0x0800057d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsClear                    0x08000581   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsClearDone                0x08000585   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsGet                      0x08000589   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsWait                     0x0800058d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitPending              0x08000591   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitTimeout              0x08000595   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitCompleted            0x08000599   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitNotCompleted         0x0800059d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsDelete                   0x080005a1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxEventFlagsDestroyed                0x080005a5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexError                         0x080005a9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexNew                           0x080005ad   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexCreated                       0x080005b1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexGetName                       0x080005b5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexAcquire                       0x080005b9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexAcquirePending                0x080005bd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexAcquireTimeout                0x080005c1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexAcquired                      0x080005c5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexNotAcquired                   0x080005c9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexRelease                       0x080005cd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexReleased                      0x080005d1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexGetOwner                      0x080005d5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexDelete                        0x080005d9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMutexDestroyed                     0x080005dd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreError                     0x080005e1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreNew                       0x080005e5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreCreated                   0x080005e9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreGetName                   0x080005ed   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquire                   0x080005f1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquirePending            0x080005f5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquireTimeout            0x080005f9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquired                  0x080005fd   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreNotAcquired               0x08000601   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreRelease                   0x08000605   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreReleased                  0x08000609   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreGetCount                  0x0800060d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreDelete                    0x08000611   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxSemaphoreDestroyed                 0x08000615   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolError                    0x08000619   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolNew                      0x0800061d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolCreated                  0x08000621   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetName                  0x08000625   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolAlloc                    0x08000629   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocPending             0x0800062d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocTimeout             0x08000631   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocated                0x08000635   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocFailed              0x08000639   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolFree                     0x0800063d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolDeallocated              0x08000641   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolFreeFailed               0x08000645   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetCapacity              0x08000649   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetBlockSize             0x0800064d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetCount                 0x08000651   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetSpace                 0x08000655   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolDelete                   0x08000659   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMemoryPoolDestroyed                0x0800065d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueError                  0x08000661   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueNew                    0x08000665   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueCreated                0x08000669   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetName                0x0800066d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueuePut                    0x08000671   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueuePutPending             0x08000675   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueuePutTimeout             0x08000679   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueInsertPending          0x0800067d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueInserted               0x08000681   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueNotInserted            0x08000685   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGet                    0x08000689   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetPending             0x0800068d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetTimeout             0x08000691   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueRetrieved              0x08000695   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueNotRetrieved           0x08000699   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetCapacity            0x0800069d   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetMsgSize             0x080006a1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetCount               0x080006a5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueGetSpace               0x080006a9   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueReset                  0x080006ad   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueResetDone              0x080006b1   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueDelete                 0x080006b5   Thumb Code     2  rtx_evr.o(.text)
    EvrRtxMessageQueueDestroyed              0x080006b9   Thumb Code     2  rtx_evr.o(.text)
    osRtxKernelBeforeInit                    0x080006bd   Thumb Code     2  rtx_kernel.o(.text)
    osRtxKernelErrorNotify                   0x080006c1   Thumb Code    22  rtx_kernel.o(.text)
    osKernelInitialize                       0x080006d9   Thumb Code    54  rtx_kernel.o(.text)
    osKernelGetInfo                          0x08000711   Thumb Code   122  rtx_kernel.o(.text)
    osKernelGetState                         0x080007dd   Thumb Code    60  rtx_kernel.o(.text)
    osKernelStart                            0x08000831   Thumb Code    50  rtx_kernel.o(.text)
    osKernelLock                             0x08000865   Thumb Code    50  rtx_kernel.o(.text)
    osKernelUnlock                           0x08000899   Thumb Code    50  rtx_kernel.o(.text)
    osKernelRestoreLock                      0x080008cd   Thumb Code   154  rtx_kernel.o(.text)
    osKernelSuspend                          0x080009ad   Thumb Code    48  rtx_kernel.o(.text)
    osKernelResume                           0x080009dd   Thumb Code    52  rtx_kernel.o(.text)
    osKernelProtect                          0x08000a11   Thumb Code    54  rtx_kernel.o(.text)
    osKernelDestroyClass                     0x08000a49   Thumb Code    86  rtx_kernel.o(.text)
    osKernelGetTickCount                     0x08000aa9   Thumb Code    50  rtx_kernel.o(.text)
    osKernelGetTickFreq                      0x08000af1   Thumb Code    52  rtx_kernel.o(.text)
    osKernelGetSysTimerCount                 0x08000b3d   Thumb Code    80  rtx_kernel.o(.text)
    osKernelGetSysTimerFreq                  0x08000bc1   Thumb Code    46  rtx_kernel.o(.text)
    _platform_post_stackheap_init            0x08000f79   Thumb Code     4  rtx_lib.o(.text)
    __user_perthread_libspace                0x08000f7d   Thumb Code   110  rtx_lib.o(.text)
    osRtxThreadBeforeFree                    0x08000fed   Thumb Code    36  rtx_lib.o(.text)
    osRtxMemoryInit                          0x08001011   Thumb Code    64  rtx_memory.o(.text)
    osRtxMemoryAlloc                         0x08001051   Thumb Code   128  rtx_memory.o(.text)
    osRtxMemoryFree                          0x080010d1   Thumb Code    88  rtx_memory.o(.text)
    osRtxMemoryPoolInit                      0x08001129   Thumb Code    86  rtx_mempool.o(.text)
    osRtxMemoryPoolAlloc                     0x08001181   Thumb Code    68  rtx_mempool.o(.text)
    osRtxMemoryPoolFree                      0x080011c5   Thumb Code    86  rtx_mempool.o(.text)
    osMemoryPoolNew                          0x0800121d   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetName                      0x0800125d   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolAlloc                        0x080012c1   Thumb Code   158  rtx_mempool.o(.text)
    osMemoryPoolFree                         0x08001361   Thumb Code   192  rtx_mempool.o(.text)
    osMemoryPoolGetCapacity                  0x08001421   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetBlockSize                 0x08001485   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetCount                     0x080014e9   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetSpace                     0x0800154d   Thumb Code    72  rtx_mempool.o(.text)
    osMemoryPoolDelete                       0x080015c1   Thumb Code    56  rtx_mempool.o(.text)
    osRtxMessageQueueTimerSetup              0x08001aa9   Thumb Code    44  rtx_msgqueue.o(.text)
    osMessageQueueNew                        0x08001c41   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetName                    0x08001c81   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueuePut                        0x08001ce5   Thumb Code   166  rtx_msgqueue.o(.text)
    osMessageQueueGet                        0x08001d8d   Thumb Code   212  rtx_msgqueue.o(.text)
    osMessageQueueGetCapacity                0x08001e61   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetMsgSize                 0x08001ec5   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetCount                   0x08001f29   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetSpace                   0x08001f8d   Thumb Code    72  rtx_msgqueue.o(.text)
    osMessageQueueReset                      0x08002001   Thumb Code    56  rtx_msgqueue.o(.text)
    osMessageQueueDelete                     0x08002039   Thumb Code    56  rtx_msgqueue.o(.text)
    osRtxMutexOwnerRelease                   0x08002725   Thumb Code   100  rtx_mutex.o(.text)
    osRtxMutexOwnerRestore                   0x08002789   Thumb Code    80  rtx_mutex.o(.text)
    osMutexNew                               0x080027d9   Thumb Code    56  rtx_mutex.o(.text)
    osMutexGetName                           0x08002811   Thumb Code    64  rtx_mutex.o(.text)
    osMutexAcquire                           0x08002875   Thumb Code    60  rtx_mutex.o(.text)
    osMutexRelease                           0x080028b1   Thumb Code    56  rtx_mutex.o(.text)
    osMutexGetOwner                          0x080028e9   Thumb Code    44  rtx_mutex.o(.text)
    osMutexDelete                            0x08002915   Thumb Code    56  rtx_mutex.o(.text)
    osRtxTick_Handler                        0x08002cb5   Thumb Code   132  rtx_system.o(.text)
    osRtxPendSV_Handler                      0x08002d39   Thumb Code   136  rtx_system.o(.text)
    osRtxPostProcess                         0x08002de5   Thumb Code   118  rtx_system.o(.text)
    osRtxThreadListPut                       0x08002e5d   Thumb Code    44  rtx_thread.o(.text)
    osRtxThreadListGet                       0x08002e89   Thumb Code    20  rtx_thread.o(.text)
    osRtxThreadListSort                      0x08002e9d   Thumb Code   106  rtx_thread.o(.text)
    osRtxThreadListRemove                    0x08002f09   Thumb Code    26  rtx_thread.o(.text)
    osRtxThreadReadyPut                      0x08002f25   Thumb Code    60  rtx_thread.o(.text)
    osRtxThreadDelayRemove                   0x08002f61   Thumb Code    72  rtx_thread.o(.text)
    osRtxThreadDelayTick                     0x08002fa9   Thumb Code   344  rtx_thread.o(.text)
    osRtxThreadRegPtr                        0x08003101   Thumb Code     6  rtx_thread.o(.text)
    osRtxThreadSwitch                        0x08003109   Thumb Code    36  rtx_thread.o(.text)
    osRtxThreadDispatch                      0x0800312d   Thumb Code   276  rtx_thread.o(.text)
    osRtxThreadWaitExit                      0x08003241   Thumb Code   148  rtx_thread.o(.text)
    osRtxThreadWaitEnter                     0x080032d5   Thumb Code   250  rtx_thread.o(.text)
    osRtxThreadStackCheck                    0x080033d1   Thumb Code    32  rtx_thread.o(.text)
    osRtxThreadJoinWakeup                    0x080033f1   Thumb Code    38  rtx_thread.o(.text)
    osRtxThreadDestroy                       0x08003419   Thumb Code    56  rtx_thread.o(.text)
    osRtxThreadStartup                       0x080034bd   Thumb Code    74  rtx_thread.o(.text)
    osThreadNew                              0x08003761   Thumb Code    64  rtx_thread.o(.text)
    osThreadGetName                          0x080037a1   Thumb Code    64  rtx_thread.o(.text)
    osThreadGetClass                         0x08003805   Thumb Code    36  rtx_thread.o(.text)
    osThreadGetZone                          0x08003831   Thumb Code    36  rtx_thread.o(.text)
    osThreadGetId                            0x0800385d   Thumb Code    52  rtx_thread.o(.text)
    osThreadGetState                         0x080038a9   Thumb Code    46  rtx_thread.o(.text)
    osThreadGetStackSize                     0x080038d9   Thumb Code    42  rtx_thread.o(.text)
    osThreadGetStackSpace                    0x08003905   Thumb Code    42  rtx_thread.o(.text)
    osThreadSetPriority                      0x08003931   Thumb Code    60  rtx_thread.o(.text)
    osThreadGetPriority                      0x0800396d   Thumb Code    46  rtx_thread.o(.text)
    osThreadYield                            0x0800399d   Thumb Code    52  rtx_thread.o(.text)
    osThreadSuspend                          0x080039d1   Thumb Code    56  rtx_thread.o(.text)
    osThreadResume                           0x08003a09   Thumb Code    56  rtx_thread.o(.text)
    osThreadDetach                           0x08003a41   Thumb Code    56  rtx_thread.o(.text)
    osThreadJoin                             0x08003a79   Thumb Code    56  rtx_thread.o(.text)
    osThreadExit                             0x08003ab1   Thumb Code    26  rtx_thread.o(.text)
    osThreadTerminate                        0x08003acd   Thumb Code    56  rtx_thread.o(.text)
    osThreadFeedWatchdog                     0x08003b05   Thumb Code    56  rtx_thread.o(.text)
    osThreadProtectPrivileged                0x08003b3d   Thumb Code    52  rtx_thread.o(.text)
    osThreadSuspendClass                     0x08003b71   Thumb Code    88  rtx_thread.o(.text)
    osThreadResumeClass                      0x08003bd1   Thumb Code    88  rtx_thread.o(.text)
    osThreadTerminateZone                    0x08003c31   Thumb Code   110  rtx_thread.o(.text)
    osThreadSetAffinityMask                  0x08003ca1   Thumb Code    36  rtx_thread.o(.text)
    osThreadGetAffinityMask                  0x08003cc5   Thumb Code    34  rtx_thread.o(.text)
    osThreadGetCount                         0x08003ce9   Thumb Code    42  rtx_thread.o(.text)
    osThreadEnumerate                        0x08003d15   Thumb Code    42  rtx_thread.o(.text)
    osThreadFlagsSet                         0x08003d41   Thumb Code   130  rtx_thread.o(.text)
    osThreadFlagsClear                       0x08003dc5   Thumb Code    56  rtx_thread.o(.text)
    osThreadFlagsGet                         0x08003dfd   Thumb Code    42  rtx_thread.o(.text)
    osThreadFlagsWait                        0x08003e29   Thumb Code    64  rtx_thread.o(.text)
    osRtxTimerSetup                          0x08004a65   Thumb Code    38  rtx_timer.o(.text)
    osRtxTimerThread                         0x08004b55   Thumb Code    42  rtx_timer.o(.text)
    osTimerNew                               0x08004b81   Thumb Code    74  rtx_timer.o(.text)
    osTimerGetName                           0x08004bcd   Thumb Code    64  rtx_timer.o(.text)
    osTimerStart                             0x08004c31   Thumb Code    60  rtx_timer.o(.text)
    osTimerStop                              0x08004c6d   Thumb Code    56  rtx_timer.o(.text)
    osTimerIsRunning                         0x08004ca5   Thumb Code    42  rtx_timer.o(.text)
    osTimerDelete                            0x08004cd1   Thumb Code    56  rtx_timer.o(.text)
    OS_Tick_Setup                            0x08004f95   Thumb Code    72  os_systick.o(.text)
    OS_Tick_Enable                           0x08004fdd   Thumb Code    50  os_systick.o(.text)
    OS_Tick_Disable                          0x08005011   Thumb Code    52  os_systick.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x08005045   Thumb Code    12  os_systick.o(.text)
    OS_Tick_GetIRQn                          0x08005051   Thumb Code     6  os_systick.o(.text)
    OS_Tick_GetClock                         0x08005059   Thumb Code    12  os_systick.o(.text)
    OS_Tick_GetInterval                      0x08005065   Thumb Code    14  os_systick.o(.text)
    OS_Tick_GetCount                         0x08005075   Thumb Code    24  os_systick.o(.text)
    OS_Tick_GetOverflow                      0x0800508d   Thumb Code    16  os_systick.o(.text)
    osRtxIdleThread                          0x0800509d   Thumb Code     2  rtx_config.o(.text)
    osRtxErrorNotify                         0x080050a1   Thumb Code     2  rtx_config.o(.text)
    Reset_Handler                            0x080050a5   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080050ad   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080050af   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080050b1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080050b3   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080050b5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080050b9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080050bf   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080050c1   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SystemInit                               0x080050e5   Thumb Code   272  system_stm32f10x.o(.text)
    SystemCoreClockUpdate                    0x080051f5   Thumb Code    94  system_stm32f10x.o(.text)
    __aeabi_memcpy                           0x08005253   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08005253   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080052b9   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x080052dd   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080052dd   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x080052ed   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080052ed   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x080052f1   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08005331   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08005331   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08005331   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08005335   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800537f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08005381   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08005383   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08005385   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08005385   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08005385   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080053cd   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x080053e9   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08005433   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08005445   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08005445   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0800544d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08005459   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08005459   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800545b   Thumb Code     0  indicate_semi.o(.text)
    _mutex_acquire                           0x0800545d   Thumb Code    50  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08005491   Thumb Code     6  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08005499   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x080054b9   Thumb Code    46  rtx_lib.o(.text._mutex_release)
    osRtxConfig                              0x080054e8   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08005558   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x08005590   Data          16  system_stm32f10x.o(.rodata.AHBPrescTable)
    osRtxUserSVC                             0x080055a0   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08005610   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005630   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000004   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x200000a8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000108   Data           0  libspace.o(.bss)
    .bss.os.msgqueue.cb$$Base                0x2000133c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001370   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200013c0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20001460   Number         0  rtx_lib.o(.bss.os.thread.cb)
    tid_Thread                               0x20001864   Data           4  thread.o(.bss.tid_Thread)
    x                                        0x20001868   Data           4  thread.o(.bss.x)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000056d8, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00005630, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          180    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          209  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x0000005c   Code   RO          374    !!!scatter          c_w.l(__scatter.o)
    0x08000150   0x08000150   0x0000001a   Code   RO          378    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0800016a   0x0800016a   0x00000002   PAD
    0x0800016c   0x0800016c   0x00000002   Code   RO          375    !!handler_null      c_w.l(__scatter.o)
    0x0800016e   0x0800016e   0x00000002   PAD
    0x08000170   0x08000170   0x0000001c   Code   RO          380    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO          236    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          243    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          245    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          247    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          250    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          252    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          254    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          257    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          259    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          261    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          263    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          265    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          267    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          269    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          271    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          273    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          275    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          277    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          281    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          283    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          285    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          287    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000002   Code   RO          288    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000190   0x08000190   0x00000002   Code   RO          310    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000192   0x08000192   0x00000000   Code   RO          325    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          327    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          330    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          333    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          335    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          338    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000002   Code   RO          339    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000194   0x08000194   0x00000000   Code   RO          211    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000194   0x08000194   0x00000000   Code   RO          215    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000194   0x08000194   0x00000006   Code   RO          227    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800019a   0x0800019a   0x00000008   Code   RO          216    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x080001a2   0x080001a2   0x00000004   Code   RO          218    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO          220    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001a6   0x080001a6   0x00000008   Code   RO          221    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001ae   0x080001ae   0x00000002   Code   RO          240    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001b0   0x080001b0   0x00000000   Code   RO          290    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001b0   0x080001b0   0x00000004   Code   RO          291    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001b4   0x080001b4   0x00000006   Code   RO          292    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001ba   0x080001ba   0x00000002   PAD
    0x080001bc   0x080001bc   0x00000026   Code   RO            1    .text               main.o
    0x080001e2   0x080001e2   0x00000002   PAD
    0x080001e4   0x080001e4   0x00000044   Code   RO            9    .text               thread.o
    0x08000228   0x08000228   0x000000c0   Code   RO           18    .text               irq_armv7m.o
    0x080002e8   0x080002e8   0x000000ea   Code   RO           25    .text               rtx_delay.o
    0x080003d2   0x080003d2   0x00000002   PAD
    0x080003d4   0x080003d4   0x000002e6   Code   RO           42    .text               rtx_evr.o
    0x080006ba   0x080006ba   0x00000002   PAD
    0x080006bc   0x080006bc   0x000008ba   Code   RO           49    .text               rtx_kernel.o
    0x08000f76   0x08000f76   0x00000002   PAD
    0x08000f78   0x08000f78   0x00000098   Code   RO           60    .text               rtx_lib.o
    0x08001010   0x08001010   0x00000118   Code   RO           92    .text               rtx_memory.o
    0x08001128   0x08001128   0x00000980   Code   RO          100    .text               rtx_mempool.o
    0x08001aa8   0x08001aa8   0x00000c7c   Code   RO          109    .text               rtx_msgqueue.o
    0x08002724   0x08002724   0x0000058e   Code   RO          118    .text               rtx_mutex.o
    0x08002cb2   0x08002cb2   0x00000002   PAD
    0x08002cb4   0x08002cb4   0x000001a6   Code   RO          136    .text               rtx_system.o
    0x08002e5a   0x08002e5a   0x00000002   PAD
    0x08002e5c   0x08002e5c   0x00001c06   Code   RO          144    .text               rtx_thread.o
    0x08004a62   0x08004a62   0x00000002   PAD
    0x08004a64   0x08004a64   0x0000052e   Code   RO          153    .text               rtx_timer.o
    0x08004f92   0x08004f92   0x00000002   PAD
    0x08004f94   0x08004f94   0x00000108   Code   RO          162    .text               os_systick.o
    0x0800509c   0x0800509c   0x00000006   Code   RO          171    .text               rtx_config.o
    0x080050a2   0x080050a2   0x00000002   PAD
    0x080050a4   0x080050a4   0x00000040   Code   RO          181    .text               startup_stm32f10x_md.o
    0x080050e4   0x080050e4   0x0000016e   Code   RO          187    .text               system_stm32f10x.o
    0x08005252   0x08005252   0x0000008a   Code   RO          199    .text               c_w.l(rt_memcpy_v6.o)
    0x080052dc   0x080052dc   0x00000010   Code   RO          201    .text               c_w.l(aeabi_memset4.o)
    0x080052ec   0x080052ec   0x00000044   Code   RO          203    .text               c_w.l(rt_memclr.o)
    0x08005330   0x08005330   0x0000004e   Code   RO          205    .text               c_w.l(rt_memclr_w.o)
    0x0800537e   0x0800537e   0x00000006   Code   RO          207    .text               c_w.l(heapauxi.o)
    0x08005384   0x08005384   0x00000064   Code   RO          212    .text               c_w.l(rt_memcpy_w.o)
    0x080053e8   0x080053e8   0x0000004a   Code   RO          229    .text               c_w.l(sys_stackheap_outer.o)
    0x08005432   0x08005432   0x00000012   Code   RO          231    .text               c_w.l(exit.o)
    0x08005444   0x08005444   0x00000008   Code   RO          237    .text               c_w.l(libspace.o)
    0x0800544c   0x0800544c   0x0000000c   Code   RO          300    .text               c_w.l(sys_exit.o)
    0x08005458   0x08005458   0x00000002   Code   RO          315    .text               c_w.l(use_no_semi.o)
    0x0800545a   0x0800545a   0x00000000   Code   RO          317    .text               c_w.l(indicate_semi.o)
    0x0800545a   0x0800545a   0x00000002   PAD
    0x0800545c   0x0800545c   0x00000032   Code   RO           64    .text._mutex_acquire  rtx_lib.o
    0x0800548e   0x0800548e   0x00000002   PAD
    0x08005490   0x08005490   0x00000006   Code   RO           68    .text._mutex_free   rtx_lib.o
    0x08005496   0x08005496   0x00000002   PAD
    0x08005498   0x08005498   0x00000020   Code   RO           62    .text._mutex_initialize  rtx_lib.o
    0x080054b8   0x080054b8   0x0000002e   Code   RO           66    .text._mutex_release  rtx_lib.o
    0x080054e6   0x080054e6   0x00000002   PAD
    0x080054e8   0x080054e8   0x00000070   Data   RO           74    .rodata             rtx_lib.o
    0x08005558   0x08005558   0x00000038   Data   RO           77    .rodata             rtx_lib.o
    0x08005590   0x08005590   0x00000010   Data   RO          190    .rodata.AHBPrescTable  system_stm32f10x.o
    0x080055a0   0x080055a0   0x00000004   Data   RO           76    .rodata.osRtxUserSVC  rtx_lib.o
    0x080055a4   0x080055a4   0x00000024   Data   RO           71    .rodata.os_idle_thread_attr  rtx_lib.o
    0x080055c8   0x080055c8   0x00000018   Data   RO           73    .rodata.os_timer_mq_attr  rtx_lib.o
    0x080055e0   0x080055e0   0x00000024   Data   RO           72    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08005604   0x08005604   0x0000000b   Data   RO           51    .rodata.str1.4      rtx_kernel.o
    0x0800560f   0x0800560f   0x00000001   PAD
    0x08005610   0x08005610   0x00000020   Data   RO          373    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08005630, Size: 0x00001e70, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08005630   0x00000004   Data   RW          189    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x08005634   0x000000a4   Data   RW           52    .data.os            rtx_kernel.o
    0x200000a8        -       0x00000060   Zero   RW          238    .bss                c_w.l(libspace.o)
    0x20000108        -       0x00001040   Zero   RW           70    .bss.os             rtx_lib.o
    0x20001148        -       0x00000001   Zero   RW          164    .bss.os             os_systick.o
    0x20001149   0x080056d8   0x00000003   PAD
    0x2000114c        -       0x000001f0   Zero   RW           78    .bss.os.libspace    rtx_lib.o
    0x2000133c        -       0x00000034   Zero   RW           82    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001370        -       0x00000050   Zero   RW           83    .bss.os.msgqueue.mem  rtx_lib.o
    0x200013c0        -       0x000000a0   Zero   RW           79    .bss.os.thread.cb   rtx_lib.o
    0x20001460        -       0x00000200   Zero   RW           80    .bss.os.thread.idle.stack  rtx_lib.o
    0x20001660        -       0x00000200   Zero   RW           81    .bss.os.thread.timer.stack  rtx_lib.o
    0x20001860        -       0x00000001   Zero   RW           84    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20001861   0x080056d8   0x00000003   PAD
    0x20001864        -       0x00000004   Zero   RW           11    .bss.tid_Thread     thread.o
    0x20001868        -       0x00000004   Zero   RW           12    .bss.x              thread.o
    0x2000186c   0x080056d8   0x00000004   PAD
    0x20001870        -       0x00000200   Zero   RW          179    HEAP                startup_stm32f10x_md.o
    0x20001a70        -       0x00000400   Zero   RW          178    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       192         12          0          0          0        793   irq_armv7m.o
        38          0          0          0          0       2142   main.o
       264          0          0          0          1       3984   os_systick.o
         6          0          0          0          0        685   rtx_config.o
       234          0          0          0          0       3133   rtx_delay.o
       742          0          0          0          0      20599   rtx_evr.o
      2234          0         11        164          0      20060   rtx_kernel.o
       286          0        268          0       5973       8364   rtx_lib.o
       280          0          0          0          0       2688   rtx_memory.o
      2432          0          0          0          0      18440   rtx_mempool.o
      3196          0          0          0          0      22632   rtx_msgqueue.o
      1422          0          0          0          0      11013   rtx_mutex.o
       422         36          0          0          0       5580   rtx_system.o
      7174         10          0          0          0      46882   rtx_thread.o
      1326          0          0          0          0      11474   rtx_timer.o
        64         26        236          0       1536        876   startup_stm32f10x_md.o
       366          0         16          4          0       2846   system_stm32f10x.o
        68          0          0          0          8       2288   thread.o

    ----------------------------------------------------------------------
     20770         84        564        168       7528     184479   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        24          0          1          0         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       730         16          0          0         96        948   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       722         16          0          0         96        948   c_w.l

    ----------------------------------------------------------------------
       730         16          0          0         96        948   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     21500        100        564        168       7624     184827   Grand Totals
     21500        100        564        168       7624     184827   ELF Image Totals
     21500        100        564        168          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                22064 (  21.55kB)
    Total RW  Size (RW Data + ZI Data)              7792 (   7.61kB)
    Total ROM Size (Code + RO Data + RW Data)      22232 (  21.71kB)

==============================================================================

