Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    main.o(.text) refers to led_mcbstm32e.o(.text) for LED_On
    main.o(.text) refers to main.o(.rodata.ThreadAttr_LED1) for ThreadAttr_LED1
    main.o(.text) refers to rtx_thread.o(.text) for osThreadNew
    main.o(.text) refers to main.o(.bss.led_ID1) for led_ID1
    main.o(.text) refers to main.o(.rodata.ThreadAttr_LED2) for ThreadAttr_LED2
    main.o(.text) refers to system_stm32f10x.o(.text) for SystemCoreClockUpdate
    main.o(.text) refers to rtx_kernel.o(.text) for osKernelInitialize
    main.o(.text) refers to main.o(.rodata.ThreadAttr_app_main) for ThreadAttr_app_main
    main.o(.ARM.exidx) refers to main.o(.text) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_LED1) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_LED2) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_app_main) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    led_mcbstm32e.o(.text) refers to led_mcbstm32e.o(.rodata.Pin_LED) for Pin_LED
    led_mcbstm32e.o(.text) refers to gpio_stm32f10x.o(.text) for GPIO_PortClock
    led_mcbstm32e.o(.ARM.exidx) refers to led_mcbstm32e.o(.text) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_thread.o(.text) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text) refers to rtx_evr.o(.text) for EvrRtxDelay
    rtx_delay.o(.text) refers to rtx_thread.o(.text) for osRtxThreadWaitEnter
    rtx_delay.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx) refers to rtx_delay.o(.text) for [Anonymous Symbol]
    rtx_evflags.o(.text) refers to rtx_evr.o(.text) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_evflags.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_evflags.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListRemove
    rtx_evflags.o(.ARM.exidx) refers to rtx_evflags.o(.text) for [Anonymous Symbol]
    rtx_evr.o(.text) refers to eventrecorder.o(.text) for EventRecord4
    rtx_evr.o(.ARM.exidx) refers to rtx_evr.o(.text) for [Anonymous Symbol]
    rtx_kernel.o(.text) refers to rtx_evr.o(.text) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_kernel.o(.text) refers to rtx_lib.o(.text) for osRtxKernelBeforeInit
    rtx_kernel.o(.text) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text) refers to os_systick.o(.text) for OS_Tick_GetCount
    rtx_kernel.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryInit
    rtx_kernel.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolInit
    rtx_kernel.o(.text) refers to rtx_thread.o(.text) for osRtxThreadStartup
    rtx_kernel.o(.text) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx) refers to rtx_kernel.o(.text) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text) refers to rtx_kernel.o(.text) for osKernelInitialize
    rtx_lib.o(.text) refers to eventrecorder.o(.text) for EventRecorderInitialize
    rtx_lib.o(.text) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text) refers to rtx_thread.o(.text) for osThreadGetId
    rtx_lib.o(.text) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.ARM.exidx) refers to rtx_lib.o(.text) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_kernel.o(.text) for osKernelGetState
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text._mutex_release) refers to rtx_kernel.o(.text) for osKernelGetState
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text) refers to rtx_evr.o(.text) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx) refers to rtx_memory.o(.text) for [Anonymous Symbol]
    rtx_mempool.o(.text) refers to rtx_evr.o(.text) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_mempool.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_mempool.o(.text) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_mempool.o(.ARM.exidx) refers to rtx_mempool.o(.text) for [Anonymous Symbol]
    rtx_msgqueue.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text) refers to rtx_evr.o(.text) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_msgqueue.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx) refers to rtx_msgqueue.o(.text) for [Anonymous Symbol]
    rtx_mutex.o(.text) refers to rtx_evr.o(.text) for EvrRtxMutexReleased
    rtx_mutex.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_mutex.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx) refers to rtx_mutex.o(.text) for [Anonymous Symbol]
    rtx_semaphore.o(.text) refers to rtx_evr.o(.text) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_semaphore.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_semaphore.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_semaphore.o(.ARM.exidx) refers to rtx_semaphore.o(.text) for [Anonymous Symbol]
    rtx_system.o(.text) refers to os_systick.o(.text) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text) refers to rtx_thread.o(.text) for osRtxThreadDelayTick
    rtx_system.o(.text) refers to rtx_evr.o(.text) for EvrRtxThreadPreempted
    rtx_system.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx) refers to rtx_system.o(.text) for [Anonymous Symbol]
    rtx_thread.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text) refers to rtx_evr.o(.text) for EvrRtxDelayCompleted
    rtx_thread.o(.text) refers to rtx_mutex.o(.text) for osRtxMutexOwnerRestore
    rtx_thread.o(.text) refers to rtx_lib.o(.text) for osRtxThreadBeforeFree
    rtx_thread.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryFree
    rtx_thread.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolFree
    rtx_thread.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text) refers to rtx_config.o(.text) for osRtxIdleThread
    rtx_thread.o(.text) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_thread.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_thread.o(.ARM.exidx) refers to rtx_thread.o(.text) for [Anonymous Symbol]
    rtx_timer.o(.text) refers to rtx_msgqueue.o(.text) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text) refers to rtx_kernel.o(.text) for osRtxKernelErrorNotify
    rtx_timer.o(.text) refers to rtx_evr.o(.text) for EvrRtxTimerCallback
    rtx_timer.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx) refers to rtx_timer.o(.text) for [Anonymous Symbol]
    os_systick.o(.text) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx) refers to os_systick.o(.text) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx) refers to rtx_config.o(.text) for [Anonymous Symbol]
    eventrecorder.o(.text) refers to eventrecorder.o(.bss.SysTimerState) for SysTimerState
    eventrecorder.o(.text) refers to rtx_kernel.o(.text) for osKernelGetState
    eventrecorder.o(.text) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.ARM.exidx) refers to eventrecorder.o(.text) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    gpio_stm32f10x.o(.text) refers to gpio_stm32f10x.o(.rodata..Lswitch.table.GPIO_PinConfigure.1) for .Lswitch.table.GPIO_PinConfigure.1
    gpio_stm32f10x.o(.ARM.exidx) refers to gpio_stm32f10x.o(.text) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx) refers to system_stm32f10x.o(.text) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.ARM.exidx), (40 bytes).
    Removing main.o(.bss.main_ID), (4 bytes).
    Removing main.o(.bss.led_ID2), (4 bytes).
    Removing main.o(.bss.worker_ID1), (4 bytes).
    Removing main.o(.bss.worker_ID2), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing led_mcbstm32e.o(.ARM.exidx), (48 bytes).
    Removing irq_armv7m.o(.rodata), (2 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (234 bytes).
    Removing rtx_delay.o(.ARM.exidx), (32 bytes).
    Removing rtx_evflags.o(.text), (1802 bytes).
    Removing rtx_evflags.o(.ARM.exidx), (120 bytes).
    Removing rtx_evr.o(.ARM.exidx), (1464 bytes).
    Removing rtx_kernel.o(.ARM.exidx), (256 bytes).
    Removing rtx_lib.o(.ARM.exidx), (32 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.ARM.exidx), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx), (176 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx), (176 bytes).
    Removing rtx_mutex.o(.ARM.exidx), (112 bytes).
    Removing rtx_semaphore.o(.text), (1230 bytes).
    Removing rtx_semaphore.o(.ARM.exidx), (104 bytes).
    Removing rtx_system.o(.ARM.exidx), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx), (632 bytes).
    Removing rtx_timer.o(.ARM.exidx), (120 bytes).
    Removing os_systick.o(.ARM.exidx), (72 bytes).
    Removing rtx_config.o(.ARM.exidx), (16 bytes).
    Removing eventrecorder.o(.ARM.exidx), (96 bytes).
    Removing gpio_stm32f10x.o(.ARM.exidx), (32 bytes).
    Removing system_stm32f10x.o(.ARM.exidx), (16 bytes).

35 unused section(s) (total 6940 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    FPU_USED                                 0x00000000   Number         0  irq_armv7m.o ABSOLUTE
    GPIO_STM32F10x.c                         0x00000000   Number         0  gpio_stm32f10x.o ABSOLUTE
    LED_MCBSTM32E.c                          0x00000000   Number         0  led_mcbstm32e.o ABSOLUTE
    RTE/Device/STM32F103RB/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000150   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x0800016c   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x08000170   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800018c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800018e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000190   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000192   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000194   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000194   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000194   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800019a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x080001a2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001a6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001a6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001ae   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001b0   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001b0   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001b4   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x080001bc   Section        0  main.o(.text)
    [Anonymous Symbol]                       0x08000254   Section        0  led_mcbstm32e.o(.text)
    [Anonymous Symbol]                       0x08000350   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x08000378   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x08000388   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x080003ac   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x080003b4   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x080003c4   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x080003c6   Number         0  irq_armv7m.o(.text)
    [Anonymous Symbol]                       0x08000410   Section        0  rtx_evr.o(.text)
    [Anonymous Symbol]                       0x0800111c   Section        0  rtx_kernel.o(.text)
    svcRtxKernelGetInfo                      0x080011ed   Thumb Code    78  rtx_kernel.o(.text)
    svcRtxKernelGetState                     0x08001271   Thumb Code    12  rtx_kernel.o(.text)
    svcRtxKernelRestoreLock                  0x080013b5   Thumb Code    68  rtx_kernel.o(.text)
    svcRtxKernelDestroyClass                 0x080014ed   Thumb Code     6  rtx_kernel.o(.text)
    svcRtxKernelGetTickCount                 0x08001529   Thumb Code    20  rtx_kernel.o(.text)
    svcRtxKernelGetTickFreq                  0x08001571   Thumb Code    22  rtx_kernel.o(.text)
    svcRtxKernelGetSysTimerCount             0x080015d1   Thumb Code    42  rtx_kernel.o(.text)
    svcRtxKernelGetSysTimerFreq              0x08001625   Thumb Code     4  rtx_kernel.o(.text)
    svcRtxKernelInitialize                   0x08001629   Thumb Code   348  rtx_kernel.o(.text)
    svcRtxKernelStart                        0x08001785   Thumb Code   158  rtx_kernel.o(.text)
    svcRtxKernelLock                         0x08001825   Thumb Code    58  rtx_kernel.o(.text)
    svcRtxKernelUnlock                       0x08001861   Thumb Code    58  rtx_kernel.o(.text)
    svcRtxKernelSuspend                      0x0800189d   Thumb Code   100  rtx_kernel.o(.text)
    svcRtxKernelResume                       0x08001901   Thumb Code   152  rtx_kernel.o(.text)
    svcRtxKernelProtect                      0x08001999   Thumb Code     6  rtx_kernel.o(.text)
    [Anonymous Symbol]                       0x080019a0   Section        0  rtx_lib.o(.text)
    [Anonymous Symbol]                       0x08001b2c   Section        0  rtx_memory.o(.text)
    [Anonymous Symbol]                       0x08001c44   Section        0  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetName                  0x08001db9   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetCapacity              0x08001f7d   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetBlockSize             0x08001fe1   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetCount                 0x08002045   Thumb Code    34  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetSpace                 0x080020b1   Thumb Code    42  rtx_mempool.o(.text)
    svcRtxMemoryPoolNew                      0x08002115   Thumb Code   462  rtx_mempool.o(.text)
    osRtxMemoryPoolPostProcess               0x080022e5   Thumb Code   106  rtx_mempool.o(.text)
    svcRtxMemoryPoolAlloc                    0x08002351   Thumb Code   168  rtx_mempool.o(.text)
    svcRtxMemoryPoolFree                     0x080023f9   Thumb Code   246  rtx_mempool.o(.text)
    svcRtxMemoryPoolDelete                   0x080024f1   Thumb Code   212  rtx_mempool.o(.text)
    [Anonymous Symbol]                       0x080025c4   Section        0  rtx_msgqueue.o(.text)
    svcRtxMessageQueueNew                    0x080025f1   Thumb Code   362  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetName                0x080027dd   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetCapacity            0x080029bd   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetMsgSize             0x08002a21   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetCount               0x08002a85   Thumb Code    34  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetSpace               0x08002af1   Thumb Code    42  rtx_msgqueue.o(.text)
    osRtxMessageQueuePostProcess             0x08002b8d   Thumb Code   444  rtx_msgqueue.o(.text)
    svcRtxMessageQueuePut                    0x08002d49   Thumb Code   328  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGet                    0x08002e91   Thumb Code   448  rtx_msgqueue.o(.text)
    svcRtxMessageQueueReset                  0x08003051   Thumb Code   358  rtx_msgqueue.o(.text)
    svcRtxMessageQueueDelete                 0x080031b9   Thumb Code   136  rtx_msgqueue.o(.text)
    [Anonymous Symbol]                       0x08003240   Section        0  rtx_mutex.o(.text)
    svcRtxMutexGetName                       0x0800336d   Thumb Code    34  rtx_mutex.o(.text)
    svcRtxMutexNew                           0x08003469   Thumb Code   164  rtx_mutex.o(.text)
    svcRtxMutexAcquire                       0x0800350d   Thumb Code   218  rtx_mutex.o(.text)
    svcRtxMutexRelease                       0x080035e9   Thumb Code   234  rtx_mutex.o(.text)
    svcRtxMutexGetOwner                      0x080036d5   Thumb Code    38  rtx_mutex.o(.text)
    svcRtxMutexDelete                        0x080036fd   Thumb Code   210  rtx_mutex.o(.text)
    [Anonymous Symbol]                       0x080037d0   Section        0  rtx_system.o(.text)
    [Anonymous Symbol]                       0x08003978   Section        0  rtx_thread.o(.text)
    osRtxThreadFree                          0x08003f6d   Thumb Code   102  rtx_thread.o(.text)
    svcRtxThreadNew                          0x08004025   Thumb Code   600  rtx_thread.o(.text)
    svcRtxThreadGetName                      0x080042fd   Thumb Code    34  rtx_thread.o(.text)
    svcRtxThreadGetClass                     0x08004345   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadGetZone                      0x08004371   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadGetId                        0x080043ad   Thumb Code    22  rtx_thread.o(.text)
    svcRtxThreadSuspendClass                 0x080046e5   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadResumeClass                  0x08004745   Thumb Code     6  rtx_thread.o(.text)
    osThreadEntry                            0x08004985   Thumb Code     6  rtx_thread.o(.text)
    osRtxThreadPostProcess                   0x0800498d   Thumb Code   156  rtx_thread.o(.text)
    svcRtxThreadGetState                     0x08004a29   Thumb Code    36  rtx_thread.o(.text)
    svcRtxThreadGetStackSize                 0x08004a4d   Thumb Code    34  rtx_thread.o(.text)
    svcRtxThreadGetStackSpace                0x08004a71   Thumb Code    82  rtx_thread.o(.text)
    svcRtxThreadSetPriority                  0x08004ac5   Thumb Code   184  rtx_thread.o(.text)
    svcRtxThreadGetPriority                  0x08004b7d   Thumb Code    40  rtx_thread.o(.text)
    svcRtxThreadYield                        0x08004ba5   Thumb Code   138  rtx_thread.o(.text)
    svcRtxThreadSuspend                      0x08004c31   Thumb Code   342  rtx_thread.o(.text)
    svcRtxThreadResume                       0x08004d89   Thumb Code   152  rtx_thread.o(.text)
    svcRtxThreadDetach                       0x08004e21   Thumb Code   108  rtx_thread.o(.text)
    svcRtxThreadJoin                         0x08004e8d   Thumb Code   286  rtx_thread.o(.text)
    svcRtxThreadExit                         0x08004fad   Thumb Code   196  rtx_thread.o(.text)
    svcRtxThreadTerminate                    0x08005071   Thumb Code   412  rtx_thread.o(.text)
    svcRtxThreadFeedWatchdog                 0x0800520d   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadProtectPrivileged            0x08005215   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadSetAffinityMask              0x0800521d   Thumb Code     6  rtx_thread.o(.text)
    svcRtxThreadGetAffinityMask              0x08005225   Thumb Code     4  rtx_thread.o(.text)
    svcRtxThreadGetCount                     0x08005229   Thumb Code    58  rtx_thread.o(.text)
    svcRtxThreadEnumerate                    0x08005265   Thumb Code   122  rtx_thread.o(.text)
    svcRtxThreadFlagsSet                     0x080052e1   Thumb Code   320  rtx_thread.o(.text)
    svcRtxThreadFlagsClear                   0x08005421   Thumb Code    82  rtx_thread.o(.text)
    svcRtxThreadFlagsGet                     0x08005475   Thumb Code    36  rtx_thread.o(.text)
    svcRtxThreadFlagsWait                    0x08005499   Thumb Code   230  rtx_thread.o(.text)
    [Anonymous Symbol]                       0x08005580   Section        0  rtx_timer.o(.text)
    osRtxTimerTick                           0x080055a9   Thumb Code   198  rtx_timer.o(.text)
    svcRtxTimerGetName                       0x08005729   Thumb Code    34  rtx_timer.o(.text)
    svcRtxTimerNew                           0x08005825   Thumb Code   202  rtx_timer.o(.text)
    svcRtxTimerStart                         0x080058f1   Thumb Code   194  rtx_timer.o(.text)
    svcRtxTimerStop                          0x080059b5   Thumb Code    94  rtx_timer.o(.text)
    svcRtxTimerIsRunning                     0x08005a15   Thumb Code    34  rtx_timer.o(.text)
    svcRtxTimerDelete                        0x08005a39   Thumb Code   118  rtx_timer.o(.text)
    [Anonymous Symbol]                       0x08005ab0   Section        0  os_systick.o(.text)
    [Anonymous Symbol]                       0x08005bb8   Section        0  rtx_config.o(.text)
    [Anonymous Symbol]                       0x08005bc0   Section        0  eventrecorder.o(.text)
    [Anonymous Symbol]                       0x08006d90   Section        0  gpio_stm32f10x.o(.text)
    .text                                    0x08006fa0   Section       64  startup_stm32f10x_md.o(.text)
    [Anonymous Symbol]                       0x08006fe0   Section        0  system_stm32f10x.o(.text)
    .text                                    0x0800714e   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080071d8   Section       16  aeabi_memset4.o(.text)
    .text                                    0x080071e8   Section       68  rt_memclr.o(.text)
    .text                                    0x0800722c   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800727a   Section        0  heapauxi.o(.text)
    .text                                    0x08007280   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080072e4   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800732e   Section        0  exit.o(.text)
    .text                                    0x08007340   Section        8  libspace.o(.text)
    .text                                    0x08007348   Section        0  sys_exit.o(.text)
    .text                                    0x08007354   Section        2  use_no_semi.o(.text)
    .text                                    0x08007356   Section        0  indicate_semi.o(.text)
    __tagsym$$used.1                         0x08007358   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08007358   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x0800738c   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x0800738c   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08007394   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08007394   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080073b4   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080073b4   Section        0  rtx_lib.o(.text._mutex_release)
    __tagsym$$used.4                         0x080073e4   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x08007454   Number         0  rtx_lib.o(.rodata)
    .Lswitch.table.GPIO_PinConfigure.1       0x0800748c   Data          28  gpio_stm32f10x.o(.rodata..Lswitch.table.GPIO_PinConfigure.1)
    __tagsym$$used.0                         0x080074b8   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    ThreadAttr_LED1                          0x08007510   Data          36  main.o(.rodata.ThreadAttr_LED1)
    [Anonymous Symbol]                       0x08007510   Section        0  main.o(.rodata.ThreadAttr_LED1)
    ThreadAttr_LED2                          0x08007534   Data          36  main.o(.rodata.ThreadAttr_LED2)
    [Anonymous Symbol]                       0x08007534   Section        0  main.o(.rodata.ThreadAttr_LED2)
    ThreadAttr_app_main                      0x08007558   Data          36  main.o(.rodata.ThreadAttr_app_main)
    [Anonymous Symbol]                       0x08007558   Section        0  main.o(.rodata.ThreadAttr_app_main)
    os_idle_thread_attr                      0x08007580   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08007580   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x080075a4   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x080075a4   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x080075bc   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x080075bc   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x080075e0   Section        0  main.o(.rodata.str1.1)
    .L.str                                   0x08007604   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x08007604   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss                                     0x200000a8   Section       96  libspace.o(.bss)
    os_isr_queue                             0x20000110   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000110   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000150   Data        4096  rtx_lib.o(.bss.os)
    PendST                                   0x20001150   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20001150   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x20001154   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x20001154   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20001164   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x20001344   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20001344   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20001378   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20001378   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200013c8   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200013c8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001418   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20001468   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20001468   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20001668   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20001668   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20001868   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20001868   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x20001870   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20001870   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20001a70   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20001a70   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20001e70   Data           0  startup_stm32f10x_md.o(STACK)
    SysTimerState                            0x20004800   Data           1  eventrecorder.o(.bss.SysTimerState)
    [Anonymous Symbol]                       0x20004800   Section        0  eventrecorder.o(.bss.SysTimerState)
    EventBuffer                              0x20004840   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20004840   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20004c40   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20004cc0   Data          36  eventrecorder.o(.bss.noinit)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080000ff   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000151   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x0800016d   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x08000171   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800018d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000191   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000195   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000195   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000195   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800019b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x080001a3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001af   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001b5   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    delay                                    0x080001bd   Thumb Code     2  main.o(.text)
    led_thread1                              0x080001c1   Thumb Code    14  main.o(.text)
    led_thread2                              0x080001d1   Thumb Code    14  main.o(.text)
    app_main                                 0x080001e1   Thumb Code    64  main.o(.text)
    main                                     0x08000221   Thumb Code    50  main.o(.text)
    LED_Initialize                           0x08000255   Thumb Code    66  led_mcbstm32e.o(.text)
    LED_Uninitialize                         0x08000299   Thumb Code    40  led_mcbstm32e.o(.text)
    LED_On                                   0x080002c1   Thumb Code    40  led_mcbstm32e.o(.text)
    LED_Off                                  0x080002e9   Thumb Code    42  led_mcbstm32e.o(.text)
    LED_SetOut                               0x08000315   Thumb Code    54  led_mcbstm32e.o(.text)
    LED_GetCount                             0x0800034d   Thumb Code     4  led_mcbstm32e.o(.text)
    SVC_Handler                              0x08000351   Thumb Code   146  irq_armv7m.o(.text)
    PendSV_Handler                           0x080003e3   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x080003f3   Thumb Code    16  irq_armv7m.o(.text)
    EvrRtxMemoryInit                         0x08000411   Thumb Code    30  rtx_evr.o(.text)
    EvrRtxMemoryAlloc                        0x08000431   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxMemoryFree                         0x08000451   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxMemoryBlockInit                    0x08000475   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxMemoryBlockAlloc                   0x08000495   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryBlockFree                    0x080004a5   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxKernelError                        0x080004c9   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxKernelInitialize                   0x080004d5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelInitialized                  0x080004e5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelGetInfo                      0x080004f5   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxKernelInfoRetrieved                0x08000519   Thumb Code    48  rtx_evr.o(.text)
    EvrRtxKernelStart                        0x08000549   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelStarted                      0x08000559   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelLock                         0x08000569   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelLocked                       0x08000579   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelUnlock                       0x08000589   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelUnlocked                     0x08000599   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelRestoreLock                  0x080005a9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelLockRestored                 0x080005b9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelSuspend                      0x080005c9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelSuspended                    0x080005d9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelResume                       0x080005e9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelResumed                      0x080005f9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelProtect                      0x08000609   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelProtected                    0x08000619   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelGetTickCount                 0x08000629   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelGetTickFreq                  0x08000639   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelErrorNotify                  0x08000649   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxKernelDestroyClass                 0x08000655   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadError                        0x08000665   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxThreadNew                          0x08000671   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxThreadCreated                      0x08000695   Thumb Code    24  rtx_evr.o(.text)
    EvrRtxThreadGetName                      0x080006ad   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetClass                     0x080006bd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetZone                      0x080006cd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetId                        0x080006dd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetState                     0x080006ed   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetStackSize                 0x080006fd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetStackSpace                0x0800070d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadSetPriority                  0x0800071d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadPriorityUpdated              0x0800072d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetPriority                  0x0800073d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadYield                        0x0800074d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadSuspend                      0x0800075d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadSuspended                    0x0800076d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadResume                       0x0800077d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadResumed                      0x0800078d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadDetach                       0x0800079d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadDetached                     0x080007ad   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadJoin                         0x080007bd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadJoinPending                  0x080007cd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadJoined                       0x080007dd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadBlocked                      0x080007ed   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadUnblocked                    0x080007fd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadPreempted                    0x0800080d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadSwitched                     0x0800081d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadExit                         0x0800082d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadTerminate                    0x0800083d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadDestroyed                    0x0800084d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFeedWatchdog                 0x0800085d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFeedWatchdogDone             0x0800086d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadProtectPrivileged            0x0800087d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadPrivilegedProtected          0x0800088d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetCount                     0x0800089d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadEnumerate                    0x080008ad   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxThreadSuspendClass                 0x080008d1   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadResumeClass                  0x080008e1   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadTerminateZone                0x080008f1   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadWatchdogExpired              0x08000901   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxThreadFlagsError                   0x0800090d   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxThreadFlagsSet                     0x08000919   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsSetDone                 0x08000929   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsClear                   0x08000939   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsClearDone               0x08000949   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsGet                     0x08000959   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsWait                    0x08000969   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitPending             0x0800098d   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitTimeout             0x080009b1   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitCompleted           0x080009c1   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitNotCompleted        0x080009e1   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxDelayError                         0x080009f1   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxDelay                              0x080009fd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxDelayUntil                         0x08000a0d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxDelayStarted                       0x08000a1d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxDelayUntilStarted                  0x08000a2d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxDelayCompleted                     0x08000a3d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerError                         0x08000a4d   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxTimerCallback                      0x08000a59   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerNew                           0x08000a69   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxTimerCreated                       0x08000a89   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerGetName                       0x08000a99   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerStart                         0x08000aa9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerStarted                       0x08000ab9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerStop                          0x08000ac9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerStopped                       0x08000ad9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerIsRunning                     0x08000ae9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerDelete                        0x08000af9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerDestroyed                     0x08000b09   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsError                    0x08000b19   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxEventFlagsNew                      0x08000b25   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsCreated                  0x08000b35   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsGetName                  0x08000b45   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsSet                      0x08000b55   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsSetDone                  0x08000b65   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsClear                    0x08000b75   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsClearDone                0x08000b85   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsGet                      0x08000b95   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsWait                     0x08000ba5   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitPending              0x08000bc5   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitTimeout              0x08000be5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitCompleted            0x08000bf5   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitNotCompleted         0x08000c15   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxEventFlagsDelete                   0x08000c39   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxEventFlagsDestroyed                0x08000c49   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexError                         0x08000c59   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxMutexNew                           0x08000c65   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexCreated                       0x08000c75   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexGetName                       0x08000c85   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexAcquire                       0x08000c95   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexAcquirePending                0x08000ca5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexAcquireTimeout                0x08000cb5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexAcquired                      0x08000cc5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexNotAcquired                   0x08000cd5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexRelease                       0x08000ce5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexReleased                      0x08000cf5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexGetOwner                      0x08000d05   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexDelete                        0x08000d15   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMutexDestroyed                     0x08000d25   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreError                     0x08000d35   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxSemaphoreNew                       0x08000d41   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxSemaphoreCreated                   0x08000d65   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreGetName                   0x08000d75   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquire                   0x08000d85   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquirePending            0x08000d95   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquireTimeout            0x08000da5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquired                  0x08000db5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreNotAcquired               0x08000dc5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreRelease                   0x08000dd5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreReleased                  0x08000de5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreGetCount                  0x08000df5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreDelete                    0x08000e05   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxSemaphoreDestroyed                 0x08000e15   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolError                    0x08000e25   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxMemoryPoolNew                      0x08000e31   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxMemoryPoolCreated                  0x08000e55   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetName                  0x08000e65   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolAlloc                    0x08000e75   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocPending             0x08000e85   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocTimeout             0x08000e95   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocated                0x08000ea5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocFailed              0x08000eb5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolFree                     0x08000ec5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolDeallocated              0x08000ed5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolFreeFailed               0x08000ee5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetCapacity              0x08000ef5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetBlockSize             0x08000f05   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetCount                 0x08000f15   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetSpace                 0x08000f25   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolDelete                   0x08000f35   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMemoryPoolDestroyed                0x08000f45   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueError                  0x08000f55   Thumb Code    12  rtx_evr.o(.text)
    EvrRtxMessageQueueNew                    0x08000f61   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxMessageQueueCreated                0x08000f85   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueGetName                0x08000f95   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueuePut                    0x08000fa5   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxMessageQueuePutPending             0x08000fc5   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxMessageQueuePutTimeout             0x08000fe9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueInsertPending          0x08000ff9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueInserted               0x08001009   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueNotInserted            0x08001019   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueGet                    0x08001029   Thumb Code    32  rtx_evr.o(.text)
    EvrRtxMessageQueueGetPending             0x08001049   Thumb Code    34  rtx_evr.o(.text)
    EvrRtxMessageQueueGetTimeout             0x0800106d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueRetrieved              0x0800107d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueNotRetrieved           0x0800108d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueGetCapacity            0x0800109d   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueGetMsgSize             0x080010ad   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueGetCount               0x080010bd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueGetSpace               0x080010cd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueReset                  0x080010dd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueResetDone              0x080010ed   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueDelete                 0x080010fd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxMessageQueueDestroyed              0x0800110d   Thumb Code    16  rtx_evr.o(.text)
    osRtxKernelErrorNotify                   0x08001121   Thumb Code    22  rtx_kernel.o(.text)
    osKernelInitialize                       0x08001139   Thumb Code    54  rtx_kernel.o(.text)
    osKernelGetInfo                          0x08001171   Thumb Code   122  rtx_kernel.o(.text)
    osKernelGetState                         0x0800123d   Thumb Code    50  rtx_kernel.o(.text)
    osKernelStart                            0x0800127d   Thumb Code    50  rtx_kernel.o(.text)
    osKernelLock                             0x080012b1   Thumb Code    50  rtx_kernel.o(.text)
    osKernelUnlock                           0x080012e5   Thumb Code    50  rtx_kernel.o(.text)
    osKernelRestoreLock                      0x08001319   Thumb Code   154  rtx_kernel.o(.text)
    osKernelSuspend                          0x080013f9   Thumb Code    48  rtx_kernel.o(.text)
    osKernelResume                           0x08001429   Thumb Code    52  rtx_kernel.o(.text)
    osKernelProtect                          0x0800145d   Thumb Code    54  rtx_kernel.o(.text)
    osKernelDestroyClass                     0x08001495   Thumb Code    86  rtx_kernel.o(.text)
    osKernelGetTickCount                     0x080014f5   Thumb Code    50  rtx_kernel.o(.text)
    osKernelGetTickFreq                      0x0800153d   Thumb Code    52  rtx_kernel.o(.text)
    osKernelGetSysTimerCount                 0x08001589   Thumb Code    72  rtx_kernel.o(.text)
    osKernelGetSysTimerFreq                  0x080015fd   Thumb Code    40  rtx_kernel.o(.text)
    _platform_post_stackheap_init            0x080019a1   Thumb Code     4  rtx_lib.o(.text)
    osRtxKernelBeforeInit                    0x080019a5   Thumb Code   244  rtx_lib.o(.text)
    __user_perthread_libspace                0x08001a99   Thumb Code   110  rtx_lib.o(.text)
    osRtxThreadBeforeFree                    0x08001b09   Thumb Code    36  rtx_lib.o(.text)
    osRtxMemoryInit                          0x08001b2d   Thumb Code    64  rtx_memory.o(.text)
    osRtxMemoryAlloc                         0x08001b6d   Thumb Code   128  rtx_memory.o(.text)
    osRtxMemoryFree                          0x08001bed   Thumb Code    88  rtx_memory.o(.text)
    osRtxMemoryPoolInit                      0x08001c45   Thumb Code    86  rtx_mempool.o(.text)
    osRtxMemoryPoolAlloc                     0x08001c9d   Thumb Code    68  rtx_mempool.o(.text)
    osRtxMemoryPoolFree                      0x08001ce1   Thumb Code    86  rtx_mempool.o(.text)
    osMemoryPoolNew                          0x08001d39   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetName                      0x08001d79   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolAlloc                        0x08001ddd   Thumb Code   158  rtx_mempool.o(.text)
    osMemoryPoolFree                         0x08001e7d   Thumb Code   192  rtx_mempool.o(.text)
    osMemoryPoolGetCapacity                  0x08001f3d   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetBlockSize                 0x08001fa1   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetCount                     0x08002005   Thumb Code    64  rtx_mempool.o(.text)
    osMemoryPoolGetSpace                     0x08002069   Thumb Code    72  rtx_mempool.o(.text)
    osMemoryPoolDelete                       0x080020dd   Thumb Code    56  rtx_mempool.o(.text)
    osRtxMessageQueueTimerSetup              0x080025c5   Thumb Code    44  rtx_msgqueue.o(.text)
    osMessageQueueNew                        0x0800275d   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetName                    0x0800279d   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueuePut                        0x08002801   Thumb Code   166  rtx_msgqueue.o(.text)
    osMessageQueueGet                        0x080028a9   Thumb Code   212  rtx_msgqueue.o(.text)
    osMessageQueueGetCapacity                0x0800297d   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetMsgSize                 0x080029e1   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetCount                   0x08002a45   Thumb Code    64  rtx_msgqueue.o(.text)
    osMessageQueueGetSpace                   0x08002aa9   Thumb Code    72  rtx_msgqueue.o(.text)
    osMessageQueueReset                      0x08002b1d   Thumb Code    56  rtx_msgqueue.o(.text)
    osMessageQueueDelete                     0x08002b55   Thumb Code    56  rtx_msgqueue.o(.text)
    osRtxMutexOwnerRelease                   0x08003241   Thumb Code   100  rtx_mutex.o(.text)
    osRtxMutexOwnerRestore                   0x080032a5   Thumb Code    80  rtx_mutex.o(.text)
    osMutexNew                               0x080032f5   Thumb Code    56  rtx_mutex.o(.text)
    osMutexGetName                           0x0800332d   Thumb Code    64  rtx_mutex.o(.text)
    osMutexAcquire                           0x08003391   Thumb Code    60  rtx_mutex.o(.text)
    osMutexRelease                           0x080033cd   Thumb Code    56  rtx_mutex.o(.text)
    osMutexGetOwner                          0x08003405   Thumb Code    44  rtx_mutex.o(.text)
    osMutexDelete                            0x08003431   Thumb Code    56  rtx_mutex.o(.text)
    osRtxTick_Handler                        0x080037d1   Thumb Code   132  rtx_system.o(.text)
    osRtxPendSV_Handler                      0x08003855   Thumb Code   136  rtx_system.o(.text)
    osRtxPostProcess                         0x08003901   Thumb Code   118  rtx_system.o(.text)
    osRtxThreadListPut                       0x08003979   Thumb Code    44  rtx_thread.o(.text)
    osRtxThreadListGet                       0x080039a5   Thumb Code    20  rtx_thread.o(.text)
    osRtxThreadListSort                      0x080039b9   Thumb Code   106  rtx_thread.o(.text)
    osRtxThreadListRemove                    0x08003a25   Thumb Code    26  rtx_thread.o(.text)
    osRtxThreadReadyPut                      0x08003a41   Thumb Code    60  rtx_thread.o(.text)
    osRtxThreadDelayRemove                   0x08003a7d   Thumb Code    72  rtx_thread.o(.text)
    osRtxThreadDelayTick                     0x08003ac5   Thumb Code   344  rtx_thread.o(.text)
    osRtxThreadRegPtr                        0x08003c1d   Thumb Code     6  rtx_thread.o(.text)
    osRtxThreadSwitch                        0x08003c25   Thumb Code    36  rtx_thread.o(.text)
    osRtxThreadDispatch                      0x08003c49   Thumb Code   276  rtx_thread.o(.text)
    osRtxThreadWaitExit                      0x08003d5d   Thumb Code   148  rtx_thread.o(.text)
    osRtxThreadWaitEnter                     0x08003df1   Thumb Code   250  rtx_thread.o(.text)
    osRtxThreadStackCheck                    0x08003eed   Thumb Code    32  rtx_thread.o(.text)
    osRtxThreadJoinWakeup                    0x08003f0d   Thumb Code    38  rtx_thread.o(.text)
    osRtxThreadDestroy                       0x08003f35   Thumb Code    56  rtx_thread.o(.text)
    osRtxThreadStartup                       0x08003fd9   Thumb Code    74  rtx_thread.o(.text)
    osThreadNew                              0x0800427d   Thumb Code    64  rtx_thread.o(.text)
    osThreadGetName                          0x080042bd   Thumb Code    64  rtx_thread.o(.text)
    osThreadGetClass                         0x08004321   Thumb Code    36  rtx_thread.o(.text)
    osThreadGetZone                          0x0800434d   Thumb Code    36  rtx_thread.o(.text)
    osThreadGetId                            0x08004379   Thumb Code    52  rtx_thread.o(.text)
    osThreadGetState                         0x080043c5   Thumb Code    46  rtx_thread.o(.text)
    osThreadGetStackSize                     0x080043f5   Thumb Code    42  rtx_thread.o(.text)
    osThreadGetStackSpace                    0x08004421   Thumb Code    42  rtx_thread.o(.text)
    osThreadSetPriority                      0x0800444d   Thumb Code    60  rtx_thread.o(.text)
    osThreadGetPriority                      0x08004489   Thumb Code    46  rtx_thread.o(.text)
    osThreadYield                            0x080044b9   Thumb Code    52  rtx_thread.o(.text)
    osThreadSuspend                          0x080044ed   Thumb Code    56  rtx_thread.o(.text)
    osThreadResume                           0x08004525   Thumb Code    56  rtx_thread.o(.text)
    osThreadDetach                           0x0800455d   Thumb Code    56  rtx_thread.o(.text)
    osThreadJoin                             0x08004595   Thumb Code    56  rtx_thread.o(.text)
    osThreadExit                             0x080045cd   Thumb Code    26  rtx_thread.o(.text)
    osThreadTerminate                        0x080045e9   Thumb Code    56  rtx_thread.o(.text)
    osThreadFeedWatchdog                     0x08004621   Thumb Code    56  rtx_thread.o(.text)
    osThreadProtectPrivileged                0x08004659   Thumb Code    52  rtx_thread.o(.text)
    osThreadSuspendClass                     0x0800468d   Thumb Code    88  rtx_thread.o(.text)
    osThreadResumeClass                      0x080046ed   Thumb Code    88  rtx_thread.o(.text)
    osThreadTerminateZone                    0x0800474d   Thumb Code   110  rtx_thread.o(.text)
    osThreadSetAffinityMask                  0x080047bd   Thumb Code    36  rtx_thread.o(.text)
    osThreadGetAffinityMask                  0x080047e1   Thumb Code    34  rtx_thread.o(.text)
    osThreadGetCount                         0x08004805   Thumb Code    42  rtx_thread.o(.text)
    osThreadEnumerate                        0x08004831   Thumb Code    42  rtx_thread.o(.text)
    osThreadFlagsSet                         0x0800485d   Thumb Code   130  rtx_thread.o(.text)
    osThreadFlagsClear                       0x080048e1   Thumb Code    56  rtx_thread.o(.text)
    osThreadFlagsGet                         0x08004919   Thumb Code    42  rtx_thread.o(.text)
    osThreadFlagsWait                        0x08004945   Thumb Code    64  rtx_thread.o(.text)
    osRtxTimerSetup                          0x08005581   Thumb Code    38  rtx_timer.o(.text)
    osRtxTimerThread                         0x08005671   Thumb Code    42  rtx_timer.o(.text)
    osTimerNew                               0x0800569d   Thumb Code    74  rtx_timer.o(.text)
    osTimerGetName                           0x080056e9   Thumb Code    64  rtx_timer.o(.text)
    osTimerStart                             0x0800574d   Thumb Code    60  rtx_timer.o(.text)
    osTimerStop                              0x08005789   Thumb Code    56  rtx_timer.o(.text)
    osTimerIsRunning                         0x080057c1   Thumb Code    42  rtx_timer.o(.text)
    osTimerDelete                            0x080057ed   Thumb Code    56  rtx_timer.o(.text)
    OS_Tick_Setup                            0x08005ab1   Thumb Code    72  os_systick.o(.text)
    OS_Tick_Enable                           0x08005af9   Thumb Code    50  os_systick.o(.text)
    OS_Tick_Disable                          0x08005b2d   Thumb Code    52  os_systick.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x08005b61   Thumb Code    12  os_systick.o(.text)
    OS_Tick_GetIRQn                          0x08005b6d   Thumb Code     6  os_systick.o(.text)
    OS_Tick_GetClock                         0x08005b75   Thumb Code    12  os_systick.o(.text)
    OS_Tick_GetInterval                      0x08005b81   Thumb Code    14  os_systick.o(.text)
    OS_Tick_GetCount                         0x08005b91   Thumb Code    24  os_systick.o(.text)
    OS_Tick_GetOverflow                      0x08005ba9   Thumb Code    16  os_systick.o(.text)
    osRtxIdleThread                          0x08005bb9   Thumb Code     2  rtx_config.o(.text)
    osRtxErrorNotify                         0x08005bbd   Thumb Code     2  rtx_config.o(.text)
    EventRecorderTimerSetup                  0x08005bc1   Thumb Code    16  eventrecorder.o(.text)
    EventRecorderTimerGetFreq                0x08005bd1   Thumb Code    44  eventrecorder.o(.text)
    EventRecorderTimerGetCount               0x08005bfd   Thumb Code    44  eventrecorder.o(.text)
    EventRecorderInitialize                  0x08005c29   Thumb Code   720  eventrecorder.o(.text)
    EventRecorderEnable                      0x08005ef9   Thumb Code   120  eventrecorder.o(.text)
    EventRecorderStart                       0x08005f71   Thumb Code   330  eventrecorder.o(.text)
    EventRecorderDisable                     0x080060bd   Thumb Code   122  eventrecorder.o(.text)
    EventRecorderStop                        0x08006139   Thumb Code   330  eventrecorder.o(.text)
    EventRecorderClockUpdate                 0x08006285   Thumb Code   340  eventrecorder.o(.text)
    EventRecordData                          0x080063d9   Thumb Code  1392  eventrecorder.o(.text)
    EventRecord2                             0x08006949   Thumb Code   398  eventrecorder.o(.text)
    EventRecord4                             0x08006ad9   Thumb Code   696  eventrecorder.o(.text)
    GPIO_PortClock                           0x08006d91   Thumb Code   170  gpio_stm32f10x.o(.text)
    GPIO_GetPortClockState                   0x08006e3d   Thumb Code    50  gpio_stm32f10x.o(.text)
    GPIO_PinConfigure                        0x08006e71   Thumb Code   164  gpio_stm32f10x.o(.text)
    GPIO_AFConfigure                         0x08006f15   Thumb Code   138  gpio_stm32f10x.o(.text)
    Reset_Handler                            0x08006fa1   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x08006fa9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x08006fab   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x08006fad   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x08006faf   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x08006fb1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x08006fb5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x08006fbb   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x08006fbd   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SystemInit                               0x08006fe1   Thumb Code   272  system_stm32f10x.o(.text)
    SystemCoreClockUpdate                    0x080070f1   Thumb Code    94  system_stm32f10x.o(.text)
    __aeabi_memcpy                           0x0800714f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800714f   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080071b5   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x080071d9   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080071d9   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x080071e9   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080071e9   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x080071ed   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0800722d   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800722d   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800722d   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08007231   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800727b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800727d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800727f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08007281   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08007281   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08007281   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080072c9   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x080072e5   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800732f   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08007341   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08007341   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08007349   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08007355   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08007355   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08007357   Thumb Code     0  indicate_semi.o(.text)
    _mutex_acquire                           0x08007359   Thumb Code    50  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x0800738d   Thumb Code     6  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08007395   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x080073b5   Thumb Code    46  rtx_lib.o(.text._mutex_release)
    osRtxConfig                              0x080073e4   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08007454   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080074a8   Data          16  system_stm32f10x.o(.rodata.AHBPrescTable)
    EventRecorderInfo                        0x080074b8   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    Pin_LED                                  0x080074d0   Data          64  led_mcbstm32e.o(.rodata.Pin_LED)
    osRtxUserSVC                             0x0800757c   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08007610   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08007630   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000004   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x200000a8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000108   Data           0  libspace.o(.bss)
    led_ID1                                  0x20000108   Data           4  main.o(.bss.led_ID1)
    .bss.os.msgqueue.cb$$Base                0x20001344   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001378   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200013c8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20001468   Number         0  rtx_lib.o(.bss.os.thread.cb)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000076d8, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00007630, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          211    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          240  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x0000005c   Code   RO          405    !!!scatter          c_w.l(__scatter.o)
    0x08000150   0x08000150   0x0000001a   Code   RO          409    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0800016a   0x0800016a   0x00000002   PAD
    0x0800016c   0x0800016c   0x00000002   Code   RO          406    !!handler_null      c_w.l(__scatter.o)
    0x0800016e   0x0800016e   0x00000002   PAD
    0x08000170   0x08000170   0x0000001c   Code   RO          411    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO          267    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          274    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          276    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          278    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          281    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          283    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          285    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          288    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          290    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          292    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          294    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          296    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          298    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          300    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          302    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          304    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          306    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          308    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          312    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          314    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          316    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          318    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000002   Code   RO          319    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000190   0x08000190   0x00000002   Code   RO          341    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000192   0x08000192   0x00000000   Code   RO          356    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          358    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          361    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          364    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          366    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO          369    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000002   Code   RO          370    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000194   0x08000194   0x00000000   Code   RO          242    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000194   0x08000194   0x00000000   Code   RO          246    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000194   0x08000194   0x00000006   Code   RO          258    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800019a   0x0800019a   0x00000008   Code   RO          247    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x080001a2   0x080001a2   0x00000004   Code   RO          249    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO          251    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001a6   0x080001a6   0x00000008   Code   RO          252    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001ae   0x080001ae   0x00000002   Code   RO          271    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001b0   0x080001b0   0x00000000   Code   RO          321    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001b0   0x080001b0   0x00000004   Code   RO          322    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001b4   0x080001b4   0x00000006   Code   RO          323    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001ba   0x080001ba   0x00000002   PAD
    0x080001bc   0x080001bc   0x00000096   Code   RO            1    .text               main.o
    0x08000252   0x08000252   0x00000002   PAD
    0x08000254   0x08000254   0x000000fc   Code   RO           18    .text               led_mcbstm32e.o
    0x08000350   0x08000350   0x000000c0   Code   RO           27    .text               irq_armv7m.o
    0x08000410   0x08000410   0x00000d0c   Code   RO           51    .text               rtx_evr.o
    0x0800111c   0x0800111c   0x00000882   Code   RO           59    .text               rtx_kernel.o
    0x0800199e   0x0800199e   0x00000002   PAD
    0x080019a0   0x080019a0   0x0000018c   Code   RO           70    .text               rtx_lib.o
    0x08001b2c   0x08001b2c   0x00000118   Code   RO          102    .text               rtx_memory.o
    0x08001c44   0x08001c44   0x00000980   Code   RO          110    .text               rtx_mempool.o
    0x080025c4   0x080025c4   0x00000c7c   Code   RO          119    .text               rtx_msgqueue.o
    0x08003240   0x08003240   0x0000058e   Code   RO          128    .text               rtx_mutex.o
    0x080037ce   0x080037ce   0x00000002   PAD
    0x080037d0   0x080037d0   0x000001a6   Code   RO          146    .text               rtx_system.o
    0x08003976   0x08003976   0x00000002   PAD
    0x08003978   0x08003978   0x00001c06   Code   RO          154    .text               rtx_thread.o
    0x0800557e   0x0800557e   0x00000002   PAD
    0x08005580   0x08005580   0x0000052e   Code   RO          163    .text               rtx_timer.o
    0x08005aae   0x08005aae   0x00000002   PAD
    0x08005ab0   0x08005ab0   0x00000108   Code   RO          172    .text               os_systick.o
    0x08005bb8   0x08005bb8   0x00000006   Code   RO          181    .text               rtx_config.o
    0x08005bbe   0x08005bbe   0x00000002   PAD
    0x08005bc0   0x08005bc0   0x000011d0   Code   RO          188    .text               eventrecorder.o
    0x08006d90   0x08006d90   0x0000020e   Code   RO          200    .text               gpio_stm32f10x.o
    0x08006f9e   0x08006f9e   0x00000002   PAD
    0x08006fa0   0x08006fa0   0x00000040   Code   RO          212    .text               startup_stm32f10x_md.o
    0x08006fe0   0x08006fe0   0x0000016e   Code   RO          218    .text               system_stm32f10x.o
    0x0800714e   0x0800714e   0x0000008a   Code   RO          230    .text               c_w.l(rt_memcpy_v6.o)
    0x080071d8   0x080071d8   0x00000010   Code   RO          232    .text               c_w.l(aeabi_memset4.o)
    0x080071e8   0x080071e8   0x00000044   Code   RO          234    .text               c_w.l(rt_memclr.o)
    0x0800722c   0x0800722c   0x0000004e   Code   RO          236    .text               c_w.l(rt_memclr_w.o)
    0x0800727a   0x0800727a   0x00000006   Code   RO          238    .text               c_w.l(heapauxi.o)
    0x08007280   0x08007280   0x00000064   Code   RO          243    .text               c_w.l(rt_memcpy_w.o)
    0x080072e4   0x080072e4   0x0000004a   Code   RO          260    .text               c_w.l(sys_stackheap_outer.o)
    0x0800732e   0x0800732e   0x00000012   Code   RO          262    .text               c_w.l(exit.o)
    0x08007340   0x08007340   0x00000008   Code   RO          268    .text               c_w.l(libspace.o)
    0x08007348   0x08007348   0x0000000c   Code   RO          331    .text               c_w.l(sys_exit.o)
    0x08007354   0x08007354   0x00000002   Code   RO          346    .text               c_w.l(use_no_semi.o)
    0x08007356   0x08007356   0x00000000   Code   RO          348    .text               c_w.l(indicate_semi.o)
    0x08007356   0x08007356   0x00000002   PAD
    0x08007358   0x08007358   0x00000032   Code   RO           74    .text._mutex_acquire  rtx_lib.o
    0x0800738a   0x0800738a   0x00000002   PAD
    0x0800738c   0x0800738c   0x00000006   Code   RO           78    .text._mutex_free   rtx_lib.o
    0x08007392   0x08007392   0x00000002   PAD
    0x08007394   0x08007394   0x00000020   Code   RO           72    .text._mutex_initialize  rtx_lib.o
    0x080073b4   0x080073b4   0x0000002e   Code   RO           76    .text._mutex_release  rtx_lib.o
    0x080073e2   0x080073e2   0x00000002   PAD
    0x080073e4   0x080073e4   0x00000070   Data   RO           84    .rodata             rtx_lib.o
    0x08007454   0x08007454   0x00000038   Data   RO           87    .rodata             rtx_lib.o
    0x0800748c   0x0800748c   0x0000001c   Data   RO          202    .rodata..Lswitch.table.GPIO_PinConfigure.1  gpio_stm32f10x.o
    0x080074a8   0x080074a8   0x00000010   Data   RO          221    .rodata.AHBPrescTable  system_stm32f10x.o
    0x080074b8   0x080074b8   0x00000018   Data   RO          191    .rodata.EventRecorderInfo  eventrecorder.o
    0x080074d0   0x080074d0   0x00000040   Data   RO           20    .rodata.Pin_LED     led_mcbstm32e.o
    0x08007510   0x08007510   0x00000024   Data   RO            3    .rodata.ThreadAttr_LED1  main.o
    0x08007534   0x08007534   0x00000024   Data   RO            5    .rodata.ThreadAttr_LED2  main.o
    0x08007558   0x08007558   0x00000024   Data   RO            6    .rodata.ThreadAttr_app_main  main.o
    0x0800757c   0x0800757c   0x00000004   Data   RO           86    .rodata.osRtxUserSVC  rtx_lib.o
    0x08007580   0x08007580   0x00000024   Data   RO           81    .rodata.os_idle_thread_attr  rtx_lib.o
    0x080075a4   0x080075a4   0x00000018   Data   RO           83    .rodata.os_timer_mq_attr  rtx_lib.o
    0x080075bc   0x080075bc   0x00000024   Data   RO           82    .rodata.os_timer_thread_attr  rtx_lib.o
    0x080075e0   0x080075e0   0x00000023   Data   RO           11    .rodata.str1.1      main.o
    0x08007603   0x08007603   0x00000001   PAD
    0x08007604   0x08007604   0x0000000b   Data   RO           61    .rodata.str1.4      rtx_kernel.o
    0x0800760f   0x0800760f   0x00000001   PAD
    0x08007610   0x08007610   0x00000020   Data   RO          404    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08007630, Size: 0x00001e70, Max: 0x00004800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08007630   0x00000004   Data   RW          220    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x08007634   0x000000a4   Data   RW           62    .data.os            rtx_kernel.o
    0x200000a8        -       0x00000060   Zero   RW          269    .bss                c_w.l(libspace.o)
    0x20000108        -       0x00000004   Zero   RW            4    .bss.led_ID1        main.o
    0x2000010c   0x080076d8   0x00000004   PAD
    0x20000110        -       0x00001040   Zero   RW           80    .bss.os             rtx_lib.o
    0x20001150        -       0x00000001   Zero   RW          174    .bss.os             os_systick.o
    0x20001151   0x080076d8   0x00000003   PAD
    0x20001154        -       0x000001f0   Zero   RW           88    .bss.os.libspace    rtx_lib.o
    0x20001344        -       0x00000034   Zero   RW           92    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001378        -       0x00000050   Zero   RW           93    .bss.os.msgqueue.mem  rtx_lib.o
    0x200013c8        -       0x000000a0   Zero   RW           89    .bss.os.thread.cb   rtx_lib.o
    0x20001468        -       0x00000200   Zero   RW           90    .bss.os.thread.idle.stack  rtx_lib.o
    0x20001668        -       0x00000200   Zero   RW           91    .bss.os.thread.timer.stack  rtx_lib.o
    0x20001868        -       0x00000001   Zero   RW           94    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20001869   0x080076d8   0x00000007   PAD
    0x20001870        -       0x00000200   Zero   RW          210    HEAP                startup_stm32f10x_md.o
    0x20001a70        -       0x00000400   Zero   RW          209    STACK               startup_stm32f10x_md.o


    Execution Region RW_IRAM2 (Exec base: 0x20004800, Load base: 0x080076d8, Size: 0x000004e4, Max: 0x00000800, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20004800        -       0x00000001   Zero   RW          192    .bss.SysTimerState  eventrecorder.o
    0x20004801   0x080076d8   0x0000003f   PAD
    0x20004840        -       0x000004a4   Zero   RW          190    .bss.noinit         eventrecorder.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      4560          0         24          0       1189      20389   eventrecorder.o
       526         16         28          0          0       5281   gpio_stm32f10x.o
       192         12          0          0          0        809   irq_armv7m.o
       252          0         64          0          0       3035   led_mcbstm32e.o
       150          0        143          0          4       3523   main.o
       264          0          0          0          1       4000   os_systick.o
         6          0          0          0          0        701   rtx_config.o
      3340          0          0          0          0      32736   rtx_evr.o
      2178          0         11        164          0      20084   rtx_kernel.o
       530          0        268          0       5973       8737   rtx_lib.o
       280          0          0          0          0       2704   rtx_memory.o
      2432          0          0          0          0      18456   rtx_mempool.o
      3196          0          0          0          0      22648   rtx_msgqueue.o
      1422          0          0          0          0      11029   rtx_mutex.o
       422         36          0          0          0       5596   rtx_system.o
      7174         10          0          0          0      46898   rtx_thread.o
      1326          0          0          0          0      11490   rtx_timer.o
        64         26        236          0       1536        892   startup_stm32f10x_md.o
       366          0         16          4          0       2862   system_stm32f10x.o

    ----------------------------------------------------------------------
     28702        100        824        168       8780     221870   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        22          0          2          0         77          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       730         16          0          0         96        948   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       722         16          0          0         96        948   c_w.l

    ----------------------------------------------------------------------
       730         16          0          0         96        948   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     29432        116        824        168       8876     222198   Grand Totals
     29432        116        824        168       8876     222198   ELF Image Totals
     29432        116        824        168          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                30256 (  29.55kB)
    Total RW  Size (RW Data + ZI Data)              9044 (   8.83kB)
    Total ROM Size (Code + RO Data + RW Data)      30424 (  29.71kB)

==============================================================================

