Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    controller.o(.text.Controller_PIController) refers to controller.o(.bss.prev_ms) for prev_ms
    controller.o(.text.Controller_PIController) refers to controller.o(.bss.I) for I
    controller.o(.text.Controller_PIController) refers to controller.o(.bss.delta_ms) for delta_ms
    controller.o(.text.Controller_PIController) refers to controller.o(.data.Ki) for Ki
    controller.o(.text.Controller_PIController) refers to controller.o(.bss.err) for err
    controller.o(.text.Controller_PIController) refers to controller.o(.data.Kp) for Kp
    controller.o(.text.Controller_PIController) refers to controller.o(.bss.P) for P
    controller.o(.text.Controller_PIController) refers to controller.o(.bss.control_value) for control_value
    controller.o(.text.Controller_PIController) refers to controller.o(.bss.reset) for reset
    controller.o(.ARM.exidx.text.Controller_PIController) refers to controller.o(.text.Controller_PIController) for [Anonymous Symbol]
    controller.o(.text.Controller_Reset) refers to controller.o(.bss.reset) for reset
    controller.o(.ARM.exidx.text.Controller_Reset) refers to controller.o(.text.Controller_Reset) for [Anonymous Symbol]
    peripherals.o(.ARM.exidx.text.Peripheral_GPIO_EnableMotor) refers to peripherals.o(.text.Peripheral_GPIO_EnableMotor) for [Anonymous Symbol]
    peripherals.o(.ARM.exidx.text.Peripheral_GPIO_DisableMotor) refers to peripherals.o(.text.Peripheral_GPIO_DisableMotor) for [Anonymous Symbol]
    peripherals.o(.text.Peripheral_PWM_ActuateMotor) refers to peripherals.o(.bss.scaled_vel) for scaled_vel
    peripherals.o(.text.Peripheral_PWM_ActuateMotor) refers to peripherals.o(.bss.vel_debug) for vel_debug
    peripherals.o(.ARM.exidx.text.Peripheral_PWM_ActuateMotor) refers to peripherals.o(.text.Peripheral_PWM_ActuateMotor) for [Anonymous Symbol]
    peripherals.o(.text.Peripheral_Encoder_CalculateVelocity) refers to peripherals.o(.bss.Peripheral_Encoder_CalculateVelocity.lastcycle_encoder) for Peripheral_Encoder_CalculateVelocity.lastcycle_encoder
    peripherals.o(.text.Peripheral_Encoder_CalculateVelocity) refers to peripherals.o(.bss.encoder) for encoder
    peripherals.o(.text.Peripheral_Encoder_CalculateVelocity) refers to peripherals.o(.bss.Peripheral_Encoder_CalculateVelocity.lastcycle_ms) for Peripheral_Encoder_CalculateVelocity.lastcycle_ms
    peripherals.o(.text.Peripheral_Encoder_CalculateVelocity) refers to peripherals.o(.bss.difference_debug) for difference_debug
    peripherals.o(.ARM.exidx.text.Peripheral_Encoder_CalculateVelocity) refers to peripherals.o(.text.Peripheral_Encoder_CalculateVelocity) for [Anonymous Symbol]
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.reference) for reference
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.velocity) for velocity
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.control) for control
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.millisec) for millisec
    app-rtos.o(.text.Application_Setup) refers to peripherals.o(.text.Peripheral_GPIO_EnableMotor) for Peripheral_GPIO_EnableMotor
    app-rtos.o(.text.Application_Setup) refers to controller.o(.text.Controller_Reset) for Controller_Reset
    app-rtos.o(.text.Application_Setup) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.text.app_ref) for app_ref
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.rodata.ThreadAttr_ref) for ThreadAttr_ref
    app-rtos.o(.text.Application_Setup) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.T_ID1) for T_ID1
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.text.app_ctrl) for app_ctrl
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.rodata.ThreadAttr_ctrl) for ThreadAttr_ctrl
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.T_ID2) for T_ID2
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.text.app_main) for app_main
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.rodata.ThreadAttr_main) for ThreadAttr_main
    app-rtos.o(.text.Application_Setup) refers to app-rtos.o(.bss.T_ID3) for T_ID3
    app-rtos.o(.text.Application_Setup) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    app-rtos.o(.ARM.exidx.text.Application_Setup) refers to app-rtos.o(.text.Application_Setup) for [Anonymous Symbol]
    app-rtos.o(.text.callback_signal_flags) refers to app-rtos.o(.bss.T_ID2) for T_ID2
    app-rtos.o(.text.callback_signal_flags) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    app-rtos.o(.text.callback_signal_flags) refers to app-rtos.o(.bss.T_ID1) for T_ID1
    app-rtos.o(.ARM.exidx.text.callback_signal_flags) refers to app-rtos.o(.text.callback_signal_flags) for [Anonymous Symbol]
    app-rtos.o(.text.Application_Loop) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    app-rtos.o(.ARM.exidx.text.Application_Loop) refers to app-rtos.o(.text.Application_Loop) for [Anonymous Symbol]
    app-rtos.o(.text.app_ctrl) refers to app-rtos.o(.bss.millisec) for millisec
    app-rtos.o(.text.app_ctrl) refers to app-rtos.o(.bss.velocity) for velocity
    app-rtos.o(.text.app_ctrl) refers to app-rtos.o(.bss.reference) for reference
    app-rtos.o(.text.app_ctrl) refers to app-rtos.o(.bss.control) for control
    app-rtos.o(.text.app_ctrl) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    app-rtos.o(.text.app_ctrl) refers to main.o(.text.Main_GetTickMillisec) for Main_GetTickMillisec
    app-rtos.o(.text.app_ctrl) refers to peripherals.o(.text.Peripheral_Encoder_CalculateVelocity) for Peripheral_Encoder_CalculateVelocity
    app-rtos.o(.text.app_ctrl) refers to controller.o(.text.Controller_PIController) for Controller_PIController
    app-rtos.o(.text.app_ctrl) refers to peripherals.o(.text.Peripheral_PWM_ActuateMotor) for Peripheral_PWM_ActuateMotor
    app-rtos.o(.ARM.exidx.text.app_ctrl) refers to app-rtos.o(.text.app_ctrl) for [Anonymous Symbol]
    app-rtos.o(.text.app_ref) refers to app-rtos.o(.bss.reference) for reference
    app-rtos.o(.text.app_ref) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    app-rtos.o(.ARM.exidx.text.app_ref) refers to app-rtos.o(.text.app_ref) for [Anonymous Symbol]
    app-rtos.o(.text.app_main) refers to app-rtos.o(.text.callback_signal_flags) for callback_signal_flags
    app-rtos.o(.text.app_main) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    app-rtos.o(.text.app_main) refers to app-rtos.o(.bss.timer_ctrl) for timer_ctrl
    app-rtos.o(.text.app_main) refers to app-rtos.o(.bss.timer_ref) for timer_ref
    app-rtos.o(.text.app_main) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    app-rtos.o(.text.app_main) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    app-rtos.o(.ARM.exidx.text.app_main) refers to app-rtos.o(.text.app_main) for [Anonymous Symbol]
    app-rtos.o(.rodata.ThreadAttr_ref) refers to app-rtos.o(.rodata.str1.1) for [Anonymous Symbol]
    app-rtos.o(.rodata.ThreadAttr_ctrl) refers to app-rtos.o(.rodata.str1.1) for [Anonymous Symbol]
    app-rtos.o(.rodata.ThreadAttr_main) refers to app-rtos.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.text.Main_GetTickMillisec) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.ARM.exidx.text.Main_GetTickMillisec) refers to main.o(.text.Main_GetTickMillisec) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32l4xx_hal_1.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    main.o(.text.main) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    main.o(.text.main) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to main.o(.bss.htim1) for htim1
    main.o(.text.main) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Init) for HAL_TIM_Encoder_Init
    main.o(.text.main) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_MasterConfigSynchronization) for HAL_TIMEx_MasterConfigSynchronization
    main.o(.text.main) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start) for HAL_TIM_Encoder_Start
    main.o(.text.main) refers to main.o(.bss.htim3) for htim3
    main.o(.text.main) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Init) for HAL_TIM_PWM_Init
    main.o(.text.main) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_ConfigChannel) for HAL_TIM_PWM_ConfigChannel
    main.o(.text.main) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start) for HAL_TIM_PWM_Start
    main.o(.text.main) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit) for HAL_TIM_MspPostInit
    main.o(.text.main) refers to app-rtos.o(.text.Application_Setup) for Application_Setup
    main.o(.text.main) refers to app-rtos.o(.text.Application_Loop) for Application_Loop
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ControlVoltageScaling) for HAL_PWREx_ControlVoltageScaling
    main.o(.text.SystemClock_Config) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    stm32l4xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32l4xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32l4xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32l4xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32l4xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32l4xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32l4xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32l4xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32l4xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32l4xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32l4xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32l4xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryAlloc) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialized) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetInfo) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelRestoreLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLockRestored) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelProtect) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelProtect) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelProtected) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtected) refers to rtx_evr.o(.text.EvrRtxKernelProtected) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelErrorNotify) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelDestroyClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetClass) refers to rtx_evr.o(.text.EvrRtxThreadGetClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetZone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetZone) refers to rtx_evr.o(.text.EvrRtxThreadGetZone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetId) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadYield) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetach) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetached) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoinPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoined) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadBlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadUnblocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPreempted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSwitched) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadExit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdogDone) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPrivilegedProtected) refers to rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadEnumerate) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspendClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumeClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminateZone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadTerminateZone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadWatchdogExpired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadWatchdogExpired) refers to rtx_evr.o(.text.EvrRtxThreadWatchdogExpired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntilStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCallback) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStop) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStopped) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerIsRunning) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetOwner) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePut) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGet) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueResetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_lib.o(.text.osRtxKernelBeforeInit) for osRtxKernelBeforeInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelProtect) for EvrRtxKernelProtect
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for svcRtxKernelProtect
    rtx_kernel.o(.ARM.exidx.text.osKernelProtect) refers to rtx_kernel.o(.text.osKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelDestroyClass) for EvrRtxKernelDestroyClass
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for svcRtxKernelDestroyClass
    rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.osKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.osRtxKernelBeforeInit) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    rtx_lib.o(.text.osRtxKernelBeforeInit) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    rtx_lib.o(.text.osRtxKernelBeforeInit) refers to eventrecorder.o(.text.EventRecorderDisable) for EventRecorderDisable
    rtx_lib.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_lib.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for osRtxThreadBeforeFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadEntry) for osThreadEntry
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for svcRtxThreadGetClass
    rtx_thread.o(.ARM.exidx.text.osThreadGetClass) refers to rtx_thread.o(.text.osThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for svcRtxThreadGetZone
    rtx_thread.o(.ARM.exidx.text.osThreadGetZone) refers to rtx_thread.o(.text.osThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) for EvrRtxThreadFeedWatchdog
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for svcRtxThreadFeedWatchdog
    rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.osThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) for EvrRtxThreadProtectPrivileged
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for svcRtxThreadProtectPrivileged
    rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.osThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadSuspendClass) for EvrRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for svcRtxThreadSuspendClass
    rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass) refers to rtx_thread.o(.text.osThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadResumeClass) for EvrRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for svcRtxThreadResumeClass
    rtx_thread.o(.ARM.exidx.text.osThreadResumeClass) refers to rtx_thread.o(.text.osThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadTerminateZone) for EvrRtxThreadTerminateZone
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for svcRtxThreadSetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.osThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for svcRtxThreadGetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.osThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadEntry) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventRecordData) refers to memcpya.o(.text) for __aeabi_memcpy
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.ITM_SendChar) refers to retarget_io.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget_io.o(.text.ITM_ReceiveChar) refers to retarget_io.o(.data.ITM_RxBuffer) for ITM_RxBuffer
    retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar) refers to retarget_io.o(.text.ITM_ReceiveChar) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.text.__aeabi_assert) refers to fwrite.o(i.fwrite) for fwrite
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_MspInit) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspInit) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_MspPostInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspDeInit) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    startup_stm32l476xx.o(RESET) refers to startup_stm32l476xx.o(STACK) for __initial_sp
    startup_stm32l476xx.o(RESET) refers to startup_stm32l476xx.o(.text) for Reset_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32l476xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32l476xx.o(RESET) refers to stm32l4xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32l476xx.o(.text) refers to system_stm32l4xx.o(.text.SystemInit) for SystemInit
    startup_stm32l476xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_stm32l4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32l4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32l4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_Init) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32l4xx_hal_1.o(.text.HAL_Init) refers to stm32l4xx_hal_1.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_1.o(.text.HAL_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_Init) refers to stm32l4xx_hal_1.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_InitTick) refers to stm32l4xx_hal_1.o(.data.uwTickFreq) for uwTickFreq
    stm32l4xx_hal_1.o(.text.HAL_InitTick) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_1.o(.text.HAL_InitTick) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32l4xx_hal_1.o(.text.HAL_InitTick) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32l4xx_hal_1.o(.text.HAL_InitTick) refers to stm32l4xx_hal_1.o(.data.uwTickPrio) for uwTickPrio
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_InitTick) refers to stm32l4xx_hal_1.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_MspInit) refers to stm32l4xx_hal_1.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_DeInit) refers to stm32l4xx_hal_1.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DeInit) refers to stm32l4xx_hal_1.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32l4xx_hal_1.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_IncTick) refers to stm32l4xx_hal_1.o(.data.uwTickFreq) for uwTickFreq
    stm32l4xx_hal_1.o(.text.HAL_IncTick) refers to stm32l4xx_hal_1.o(.bss.uwTick) for uwTick
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_IncTick) refers to stm32l4xx_hal_1.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_GetTick) refers to stm32l4xx_hal_1.o(.bss.uwTick) for uwTick
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetTick) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_GetTickPrio) refers to stm32l4xx_hal_1.o(.data.uwTickPrio) for uwTickPrio
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32l4xx_hal_1.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_SetTickFreq) refers to stm32l4xx_hal_1.o(.data.uwTickFreq) for uwTickFreq
    stm32l4xx_hal_1.o(.text.HAL_SetTickFreq) refers to stm32l4xx_hal_1.o(.data.uwTickPrio) for uwTickPrio
    stm32l4xx_hal_1.o(.text.HAL_SetTickFreq) refers to stm32l4xx_hal_1.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32l4xx_hal_1.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_GetTickFreq) refers to stm32l4xx_hal_1.o(.data.uwTickFreq) for uwTickFreq
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32l4xx_hal_1.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_Delay) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_1.o(.text.HAL_Delay) refers to stm32l4xx_hal_1.o(.data.uwTickFreq) for uwTickFreq
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_Delay) refers to stm32l4xx_hal_1.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32l4xx_hal_1.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32l4xx_hal_1.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32l4xx_hal_1.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32l4xx_hal_1.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32l4xx_hal_1.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32l4xx_hal_1.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32l4xx_hal_1.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32l4xx_hal_1.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32l4xx_hal_1.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32l4xx_hal_1.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32l4xx_hal_1.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32l4xx_hal_1.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32l4xx_hal_1.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32l4xx_hal_1.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_SRAM2Erase) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_SRAM2Erase) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_EnableMemorySwappingBank) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableMemorySwappingBank) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_DisableMemorySwappingBank) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_DisableMemorySwappingBank) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableVREFBUF) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableVREFBUF) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_DisableVREFBUF) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) refers to stm32l4xx_hal_1.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SystemReset) refers to stm32l4xx_hal_cortex_1.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32l4xx_hal_cortex_1.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32l4xx_hal_cortex_1.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.text.HAL_DMA_PollForTransfer) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableLowPowerRunMode) for HAL_PWREx_EnableLowPowerRunMode
    stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableLowPowerRunMode) for HAL_PWREx_DisableLowPowerRunMode
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSTOPMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP0Mode) for HAL_PWREx_EnterSTOP0Mode
    stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSTOPMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP1Mode) for HAL_PWREx_EnterSTOP1Mode
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ControlVoltageScaling) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableBatteryCharging) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableBatteryCharging) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableVddUSB) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableVddUSB) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableVddUSB) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableVddUSB) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableVddIO2) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableVddIO2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableVddIO2) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableVddIO2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableInternalWakeUpLine) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableInternalWakeUpLine) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableGPIOPullUp) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableGPIOPullUp) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableGPIOPullDown) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableGPIOPullDown) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableSRAM2ContentRetention) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableSRAM2ContentRetention) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_SetSRAM2ContentRetention) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_SetSRAM2ContentRetention) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableSRAM2ContentRetention) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableSRAM2ContentRetention) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM1) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM1) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM1) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM1) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM2) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM2) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM2) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM3) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM3) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM3) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM3) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM4) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM4) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM4) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM4) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_ConfigPVM) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ConfigPVM) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableLowPowerRunMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableLowPowerRunMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP0Mode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP0Mode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP1Mode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP1Mode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP2Mode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP2Mode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSHUTDOWNMode) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSHUTDOWNMode) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM1Callback) for HAL_PWREx_PVM1Callback
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM2Callback) for HAL_PWREx_PVM2Callback
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM3Callback) for HAL_PWREx_PVM3Callback
    stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM4Callback) for HAL_PWREx_PVM4Callback
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVD_PVM_IRQHandler) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM1Callback) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM1Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM2Callback) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM2Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM3Callback) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM3Callback) for [Anonymous Symbol]
    stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM4Callback) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM4Callback) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_DeInit) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_DeInit) refers to stm32l4xx_hal_1.o(.data.uwTickPrio) for uwTickPrio
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_DeInit) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_DeInit) refers to stm32l4xx_hal_1.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_GetVoltageRange) for HAL_PWREx_GetVoltageRange
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_1.o(.data.uwTickPrio) for uwTickPrio
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_1.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetSysClockFreq) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal_1.o(.data.uwTickPrio) for uwTickPrio
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal_1.o(.text.HAL_InitTick) for HAL_InitTick
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_MCOConfig) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32l4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32l4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI1_Config) for RCCEx_PLLSAI1_Config
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI2_Config) for RCCEx_PLLSAI2_Config
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI1_Config) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.RCCEx_PLLSAI1_Config) refers to stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI1_Config) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI2_Config) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.RCCEx_PLLSAI2_Config) refers to stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI2_Config) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_GetSAIxPeriphCLKFreq) for RCCEx_GetSAIxPeriphCLKFreq
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.RCCEx_GetSAIxPeriphCLKFreq) refers to stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_GetSAIxPeriphCLKFreq) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnablePLLSAI1) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI1) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnablePLLSAI1) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisablePLLSAI1) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI1) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisablePLLSAI1) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnablePLLSAI2) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI2) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnablePLLSAI2) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisablePLLSAI2) refers to stm32l4xx_hal_1.o(.text.HAL_GetTick) for HAL_GetTick
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI2) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisablePLLSAI2) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_WakeUpStopCLKConfig) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_WakeUpStopCLKConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_StandbyMSIRangeConfig) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_StandbyMSIRangeConfig) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSECSS) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableLSECSS) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSECSS_IT) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_LSECSS_Callback) for HAL_RCCEx_LSECSS_Callback
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_LSECSS_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_LSECSS_Callback) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSCO) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableLSCO) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableMSIPLLMode) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableMSIPLLMode) for [Anonymous Symbol]
    stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisableMSIPLLMode) refers to stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableMSIPLLMode) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMAError) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_IT) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_DMA
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_DeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_DMA
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_IT) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.rodata.cst16) for .Lswitch.table.HAL_TIM_IC_Stop_DMA
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Init) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32l4xx_hal_tim_1.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32l4xx_hal_tim_1.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32l4xx_hal_tim_1.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32l4xx_hal_tim_1.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32l4xx_hal_tim_1.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32l4xx_hal_tim_1.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_1.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMADelayPulseNCplt) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMAErrorCCxN) refers to stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_1.o(.text.TIM_DMAError) for TIM_DMAError
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationCplt) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigBreakInput) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fwrite.o(i.fwrite) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    fwrite_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32l476xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32l476xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing controller.o(.text), (0 bytes).
    Removing controller.o(.ARM.exidx.text.Controller_PIController), (8 bytes).
    Removing controller.o(.ARM.exidx.text.Controller_Reset), (8 bytes).
    Removing peripherals.o(.text), (0 bytes).
    Removing peripherals.o(.ARM.exidx.text.Peripheral_GPIO_EnableMotor), (8 bytes).
    Removing peripherals.o(.text.Peripheral_GPIO_DisableMotor), (20 bytes).
    Removing peripherals.o(.ARM.exidx.text.Peripheral_GPIO_DisableMotor), (8 bytes).
    Removing peripherals.o(.ARM.exidx.text.Peripheral_PWM_ActuateMotor), (8 bytes).
    Removing peripherals.o(.ARM.exidx.text.Peripheral_Encoder_CalculateVelocity), (8 bytes).
    Removing app-rtos.o(.text), (0 bytes).
    Removing app-rtos.o(.ARM.exidx.text.Application_Setup), (8 bytes).
    Removing app-rtos.o(.ARM.exidx.text.callback_signal_flags), (8 bytes).
    Removing app-rtos.o(.ARM.exidx.text.Application_Loop), (8 bytes).
    Removing app-rtos.o(.ARM.exidx.text.app_ctrl), (8 bytes).
    Removing app-rtos.o(.ARM.exidx.text.app_ref), (8 bytes).
    Removing app-rtos.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Main_GetTickMillisec), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.text.Error_Handler), (6 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32l4xx_it.o(.text), (0 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32l4xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing irq_armv7m.o(.rodata), (2 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (54 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (54 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (52 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (70 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (64 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (112 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (106 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (60 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (64 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (224 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (160 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (194 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (288 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (228 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (114 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (48 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelProtect), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtect), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelProtected), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtected), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelDestroyClass), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelDestroyClass), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetClass), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetZone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetZone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetId), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFeedWatchdog), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdogDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadProtectPrivileged), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPrivilegedProtected), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspendClass), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspendClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumeClass), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumeClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminateZone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminateZone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadWatchdogExpired), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadWatchdogExpired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelay), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayStarted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (32 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexNew), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquire), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexAcquirePending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexNotAcquired), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexRelease), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (12 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (34 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (16 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelBeforeInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (122 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (78 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (154 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelProtect), (54 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelDestroyClass), (86 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelDestroyClass), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (100 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (152 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelProtect), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (158 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (192 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (468 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (106 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (168 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (246 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (212 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (364 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (136 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (56 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (64 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (60 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (56 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (56 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (164 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (218 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (234 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (38 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (210 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (64 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (64 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (34 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (128 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (140 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (64 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (34 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (56 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (198 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (68 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (130 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (128 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (114 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadJoinWakeup), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDestroy), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetClass), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetClass), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetZone), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetZone), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (46 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFeedWatchdog), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.osThreadProtectPrivileged), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspendClass), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspendClass), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResumeClass), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResumeClass), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminateZone), (110 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetAffinityMask), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetAffinityMask), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEntry), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (184 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (138 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (342 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (286 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (412 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFeedWatchdog), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadProtectPrivileged), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetAffinityMask), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (122 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (64 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (94 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (118 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (24 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (330 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (340 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (1398 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.text.ITM_SendChar), (46 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget_io.o(.text.ITM_ReceiveChar), (32 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar), (8 bytes).
    Removing retarget_io.o(.text.fputc), (62 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (6 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (6 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.text.__aeabi_assert), (176 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.text.abort), (2 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.data.ITM_RxBuffer), (4 bytes).
    Removing stm32l4xx_hal_msp.o(.text), (0 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_MspPostInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspDeInit), (44 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspDeInit), (34 bytes).
    Removing stm32l4xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing startup_stm32l476xx.o(HEAP), (512 bytes).
    Removing system_stm32l4xx.o(.text), (0 bytes).
    Removing system_stm32l4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32l4xx.o(.text.SystemCoreClockUpdate), (190 bytes).
    Removing system_stm32l4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32l4xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DeInit), (48 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SetTickFreq), (46 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_Delay), (40 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_SRAM2Erase), (28 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_SRAM2Erase), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableMemorySwappingBank), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_EnableMemorySwappingBank), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_DisableMemorySwappingBank), (12 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_DisableMemorySwappingBank), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (18 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_VREFBUF_TrimmingConfig), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableVREFBUF), (48 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_EnableVREFBUF), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_DisableVREFBUF), (16 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_DisableVREFBUF), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (16 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32l4xx_hal_1.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (16 bytes).
    Removing stm32l4xx_hal_1.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_EnableIRQ), (34 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_DisableIRQ), (42 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetPriority), (88 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPendingIRQ), (34 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetPendingIRQ), (38 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_ClearPendingIRQ), (34 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_GetActive), (38 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_CLKSourceConfig), (24 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_IRQHandler), (4 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_MPU_Enable), (24 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_MPU_Disable), (18 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.text.HAL_MPU_ConfigRegion), (94 bytes).
    Removing stm32l4xx_hal_cortex_1.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Init), (204 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_DeInit), (168 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start), (124 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Start_IT), (162 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort), (68 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_Abort_IT), (84 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_PollForTransfer), (220 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_IRQHandler), (156 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_RegisterCallback), (52 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_UnRegisterCallback), (82 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32l4xx_hal_dma_1.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32l4xx_hal_dma_1.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32l4xx_hal_dma_ex_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_DeInit), (282 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_LockPin), (44 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_EXTI_IRQHandler), (22 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32l4xx_hal_gpio_1.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_ConfigPVD), (134 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableWakeUpPin), (30 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSLEEPMode), (72 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSTOPMode), (16 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnterSTANDBYMode), (38 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32l4xx_hal_pwr_1.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableBatteryCharging), (28 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableBatteryCharging), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableVddUSB), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableVddUSB), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableVddUSB), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableVddUSB), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableVddIO2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableVddIO2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableVddIO2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableVddIO2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableInternalWakeUpLine), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableInternalWakeUpLine), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableGPIOPullUp), (190 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableGPIOPullUp), (192 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableGPIOPullDown), (246 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableGPIOPullDown), (92 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePullUpPullDownConfig), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePullUpPullDownConfig), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableSRAM2ContentRetention), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableSRAM2ContentRetention), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_SetSRAM2ContentRetention), (42 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_SetSRAM2ContentRetention), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableSRAM2ContentRetention), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableSRAM2ContentRetention), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM1), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM1), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM1), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM1), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM2), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM2), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM3), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM3), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM3), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM3), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnablePVM4), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnablePVM4), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisablePVM4), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisablePVM4), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ConfigPVM), (552 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_ConfigPVM), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnableLowPowerRunMode), (18 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_DisableLowPowerRunMode), (88 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP0Mode), (54 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP0Mode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP1Mode), (64 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP1Mode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSTOP2Mode), (64 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSTOP2Mode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_EnterSHUTDOWNMode), (38 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_EnterSHUTDOWNMode), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVD_PVM_IRQHandler), (90 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVD_PVM_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM1Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM1Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM2Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM2Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM3Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM3Callback), (8 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_PVM4Callback), (2 bytes).
    Removing stm32l4xx_hal_pwr_ex_1.o(.ARM.exidx.text.HAL_PWREx_PVM4Callback), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_DeInit), (236 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetSysClockFreq), (192 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_MCOConfig), (84 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK1Freq), (42 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetPCLK2Freq), (42 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetOscConfig), (200 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_GetClockConfig), (66 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_NMI_IRQHandler), (30 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32l4xx_hal_rcc_1.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_PeriphCLKConfig), (944 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI1_Config), (388 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.RCCEx_PLLSAI1_Config), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_PLLSAI2_Config), (350 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.RCCEx_PLLSAI2_Config), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (306 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (1048 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.RCCEx_GetSAIxPeriphCLKFreq), (270 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.RCCEx_GetSAIxPeriphCLKFreq), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnablePLLSAI1), (182 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI1), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisablePLLSAI1), (80 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI1), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnablePLLSAI2), (152 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI2), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisablePLLSAI2), (80 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI2), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_WakeUpStopCLKConfig), (20 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_WakeUpStopCLKConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_StandbyMSIRangeConfig), (22 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_StandbyMSIRangeConfig), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSECSS), (18 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableLSECSS), (26 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisableLSECSS), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSECSS_IT), (50 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableLSECSS_IT), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_LSECSS_IRQHandler), (30 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_LSECSS_Callback), (2 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_LSECSS_Callback), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableLSCO), (160 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableLSCO), (96 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_EnableMSIPLLMode), (18 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_EnableMSIPLLMode), (8 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.text.HAL_RCCEx_DisableMSIPLLMode), (18 bytes).
    Removing stm32l4xx_hal_rcc_ex_1.o(.ARM.exidx.text.HAL_RCCEx_DisableMSIPLLMode), (8 bytes).
    Removing stm32l4xx_hal_spi_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_spi_ex_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Init), (98 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start), (156 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop), (42 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_IT), (164 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop_IT), (50 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Start_DMA), (234 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedCplt), (20 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMAPeriodElapsedHalfCplt), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMAError), (92 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_Stop_DMA), (60 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Init), (98 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start), (402 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_CCxChannelCmd), (36 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop), (202 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_IT), (432 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_IT), (232 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Start_DMA), (736 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseCplt), (104 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMADelayPulseHalfCplt), (56 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_Stop_DMA), (236 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop), (202 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_IT), (432 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_IT), (232 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start_DMA), (736 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Stop_DMA), (236 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Init), (98 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_DeInit), (104 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start), (342 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop), (182 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_IT), (372 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_IT), (212 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Start_DMA), (616 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureCplt), (116 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMACaptureHalfCplt), (56 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_Stop_DMA), (214 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Init), (92 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_DeInit), (80 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Start), (150 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Stop), (148 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Start_IT), (166 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_Stop_IT), (164 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_DeInit), (80 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop), (202 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_IT), (230 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop_IT), (260 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start_DMA), (570 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Stop_DMA), (266 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IRQHandler), (392 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_DelayElapsedCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_ConfigChannel), (758 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_OC2_SetConfig), (142 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_ConfigChannel), (376 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_TI1_SetConfig), (152 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_ConfigChannel), (628 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_WriteStart), (28 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (454 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerCplt), (20 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_DMATriggerHalfCplt), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_WriteStop), (106 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_ReadStart), (28 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_MultiReadStart), (454 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurst_ReadStop), (106 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_GenerateEvent), (36 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ConfigOCrefClear), (290 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_ETR_SetConfig), (22 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ConfigClockSource), (404 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ConfigTI1Input), (16 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_SlaveConfigSynchro), (74 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.TIM_SlaveTimer_SetConfig), (188 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (74 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ReadCapturedValue), (22 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_TriggerHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_ErrorCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Base_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OC_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_IC_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_OnePulse_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_GetActiveChannel), (4 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_GetChannelState), (22 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.text.HAL_TIM_DMABurstState), (6 bytes).
    Removing stm32l4xx_hal_tim_1.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32l4xx_hal_tim_1.o(.rodata.cst16), (48 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text), (0 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Init), (200 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_MspInit), (2 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_DeInit), (80 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (2 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start), (208 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop), (66 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_IT), (224 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (74 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (272 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (74 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start), (232 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop), (136 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_IT), (280 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop_IT), (190 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Start_DMA), (494 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMADelayPulseNCplt), (104 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.TIM_DMAErrorCCxN), (66 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OCN_Stop_DMA), (170 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start), (232 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop), (136 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_IT), (280 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop_IT), (190 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Start_DMA), (494 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (170 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Start), (124 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Stop), (118 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (140 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (134 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent), (104 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (104 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (144 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationCplt), (12 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.TIMEx_DMACommutationHalfCplt), (12 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (170 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_ConfigBreakInput), (304 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_RemapConfig), (114 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_GroupChannel5), (48 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_BreakCallback), (2 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_Break2Callback), (2 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_HallSensor_GetState), (6 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_GetChannelNState), (30 bytes).
    Removing stm32l4xx_hal_tim_ex_1.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).

1439 unused section(s) (total 57220 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    RTE/Device/STM32L476RGTx/startup_stm32l476xx.s 0x00000000   Number         0  startup_stm32l476xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    app-rtos.c                               0x00000000   Number         0  app-rtos.o ABSOLUTE
    controller.c                             0x00000000   Number         0  controller.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    peripherals.c                            0x00000000   Number         0  peripherals.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32l4xx_hal.c                          0x00000000   Number         0  stm32l4xx_hal_1.o ABSOLUTE
    stm32l4xx_hal_cortex.c                   0x00000000   Number         0  stm32l4xx_hal_cortex_1.o ABSOLUTE
    stm32l4xx_hal_dma.c                      0x00000000   Number         0  stm32l4xx_hal_dma_1.o ABSOLUTE
    stm32l4xx_hal_dma_ex.c                   0x00000000   Number         0  stm32l4xx_hal_dma_ex_1.o ABSOLUTE
    stm32l4xx_hal_gpio.c                     0x00000000   Number         0  stm32l4xx_hal_gpio_1.o ABSOLUTE
    stm32l4xx_hal_msp.c                      0x00000000   Number         0  stm32l4xx_hal_msp.o ABSOLUTE
    stm32l4xx_hal_pwr.c                      0x00000000   Number         0  stm32l4xx_hal_pwr_1.o ABSOLUTE
    stm32l4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32l4xx_hal_pwr_ex_1.o ABSOLUTE
    stm32l4xx_hal_rcc.c                      0x00000000   Number         0  stm32l4xx_hal_rcc_1.o ABSOLUTE
    stm32l4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32l4xx_hal_rcc_ex_1.o ABSOLUTE
    stm32l4xx_hal_spi.c                      0x00000000   Number         0  stm32l4xx_hal_spi_1.o ABSOLUTE
    stm32l4xx_hal_spi_ex.c                   0x00000000   Number         0  stm32l4xx_hal_spi_ex_1.o ABSOLUTE
    stm32l4xx_hal_tim.c                      0x00000000   Number         0  stm32l4xx_hal_tim_1.o ABSOLUTE
    stm32l4xx_hal_tim_ex.c                   0x00000000   Number         0  stm32l4xx_hal_tim_ex_1.o ABSOLUTE
    stm32l4xx_it.c                           0x00000000   Number         0  stm32l4xx_it.o ABSOLUTE
    system_stm32l4xx.c                       0x00000000   Number         0  system_stm32l4xx.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      392  startup_stm32l476xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x08000188   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x08000188   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x0800018c   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x08000190   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x08000190   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x08000190   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x08000198   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x08000198   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x08000198   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x08000198   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    [Anonymous Symbol]                       0x0800019c   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x080001c4   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x080001d4   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x080001e6   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x0800021e   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x08000234   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x0800024e   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x08000250   Number         0  irq_armv7m.o(.text)
    $v0                                      0x080002a8   Number         0  startup_stm32l476xx.o(.text)
    .text                                    0x080002a8   Section       36  startup_stm32l476xx.o(.text)
    .text                                    0x080002cc   Section        0  memcpya.o(.text)
    .text                                    0x080002f0   Section        0  memseta.o(.text)
    .text                                    0x08000314   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x08000344   Section        0  app-rtos.o(.text.Application_Loop)
    [Anonymous Symbol]                       0x08000350   Section        0  app-rtos.o(.text.Application_Setup)
    [Anonymous Symbol]                       0x080003f4   Section        0  stm32l4xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x080003f8   Section        0  controller.o(.text.Controller_PIController)
    [Anonymous Symbol]                       0x080004bc   Section        0  controller.o(.text.Controller_Reset)
    [Anonymous Symbol]                       0x080004cc   Section        0  stm32l4xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x080004d0   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x08000660   Section        0  eventrecorder.o(.text.EventRecord4)
    [Anonymous Symbol]                       0x08000920   Section        0  eventrecorder.o(.text.EventRecorderDisable)
    [Anonymous Symbol]                       0x0800099c   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x08000a14   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x08000cf0   Section        0  eventrecorder.o(.text.EventRecorderStart)
    [Anonymous Symbol]                       0x08000e3c   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x08000e48   Section        0  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    [Anonymous Symbol]                       0x08000e54   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    [Anonymous Symbol]                       0x08000e78   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x08000e88   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08000e98   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08000ea4   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08000eb0   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08000ec0   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08000ed0   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08000ee0   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x08000ef0   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08000f00   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000f20   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x08000f30   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x08000f54   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x08000f74   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x08000f98   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x08000fb8   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x08000fc8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x08000fd8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08000fe4   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001004   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08001028   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08001038   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08001048   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08001058   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08001068   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08001078   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001098   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x080010bc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x080010cc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x080010dc   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x080010ec   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x080010fc   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x0800110c   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x0800111c   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x0800112c   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08001144   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x08001154   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x08001160   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x08001170   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    [Anonymous Symbol]                       0x0800117c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x0800118c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    [Anonymous Symbol]                       0x0800119c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x080011c0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x080011e0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    [Anonymous Symbol]                       0x080011f0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    [Anonymous Symbol]                       0x08001214   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08001224   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x08001234   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x08001258   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x08001268   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x08001278   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x08001288   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x08001298   Section        0  rtx_evr.o(.text.EvrRtxTimerCreated)
    [Anonymous Symbol]                       0x080012a8   Section        0  rtx_evr.o(.text.EvrRtxTimerError)
    [Anonymous Symbol]                       0x080012b4   Section        0  rtx_evr.o(.text.EvrRtxTimerNew)
    [Anonymous Symbol]                       0x080012d4   Section        0  rtx_evr.o(.text.EvrRtxTimerStart)
    [Anonymous Symbol]                       0x080012e4   Section        0  rtx_evr.o(.text.EvrRtxTimerStarted)
    [Anonymous Symbol]                       0x080012f4   Section        0  stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x080014b4   Section        0  stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x080014c0   Section        0  stm32l4xx_hal_1.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x080014cc   Section        0  stm32l4xx_hal_1.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080014ec   Section        0  stm32l4xx_hal_1.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08001548   Section        0  stm32l4xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08001598   Section        0  stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x080015f0   Section        0  stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08001610   Section        0  stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ControlVoltageScaling)
    [Anonymous Symbol]                       0x08001698   Section        0  stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_GetVoltageRange)
    [Anonymous Symbol]                       0x080016a8   Section        0  stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x080018bc   Section        0  stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08002004   Section        0  stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Config)
    [Anonymous Symbol]                       0x08002030   Section        0  stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_MasterConfigSynchronization)
    [Anonymous Symbol]                       0x080020f8   Section        0  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Init)
    [Anonymous Symbol]                       0x080021b0   Section        0  stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspInit)
    [Anonymous Symbol]                       0x08002220   Section        0  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start)
    [Anonymous Symbol]                       0x080022dc   Section        0  stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit)
    [Anonymous Symbol]                       0x08002364   Section        0  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_ConfigChannel)
    [Anonymous Symbol]                       0x080026ec   Section        0  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Init)
    [Anonymous Symbol]                       0x08002750   Section        0  stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspInit)
    [Anonymous Symbol]                       0x08002780   Section        0  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start)
    [Anonymous Symbol]                       0x08002914   Section        0  stm32l4xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08002918   Section        0  main.o(.text.Main_GetTickMillisec)
    [Anonymous Symbol]                       0x0800291c   Section        0  stm32l4xx_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x08002920   Section        0  stm32l4xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08002924   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08002930   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08002964   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x0800296c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x080029b4   Section        0  peripherals.o(.text.Peripheral_Encoder_CalculateVelocity)
    [Anonymous Symbol]                       0x08002a10   Section        0  peripherals.o(.text.Peripheral_GPIO_EnableMotor)
    [Anonymous Symbol]                       0x08002a20   Section        0  peripherals.o(.text.Peripheral_PWM_ActuateMotor)
    [Anonymous Symbol]                       0x08002a60   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002adc   Section        0  system_stm32l4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08002af0   Section        0  stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig)
    [Anonymous Symbol]                       0x08002c18   Section        0  stm32l4xx_it.o(.text.UsageFault_Handler)
    app_ctrl                                 0x08002c1d   Thumb Code    74  app-rtos.o(.text.app_ctrl)
    [Anonymous Symbol]                       0x08002c1c   Section        0  app-rtos.o(.text.app_ctrl)
    app_main                                 0x08002c69   Thumb Code    86  app-rtos.o(.text.app_main)
    [Anonymous Symbol]                       0x08002c68   Section        0  app-rtos.o(.text.app_main)
    app_ref                                  0x08002cc1   Thumb Code    28  app-rtos.o(.text.app_ref)
    [Anonymous Symbol]                       0x08002cc0   Section        0  app-rtos.o(.text.app_ref)
    [Anonymous Symbol]                       0x08002cdc   Section        0  app-rtos.o(.text.callback_signal_flags)
    [Anonymous Symbol]                       0x08002d08   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08002ebc   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08002ef0   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08002f24   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08002f5c   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08002f90   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08003064   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0800310c   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x08003110   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x08003114   Section        0  rtx_lib.o(.text.osRtxKernelBeforeInit)
    [Anonymous Symbol]                       0x08003208   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08003220   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080032a0   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080032f8   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08003338   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800337c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x080033d4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x0800342d   Thumb Code   444  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0800342c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080035e8   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x08003614   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08003678   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x080036c8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08003774   Section        0  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x080037ec   Section        0  rtx_thread.o(.text.osRtxThreadBeforeFree)
    [Anonymous Symbol]                       0x080037f0   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08003954   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08003a69   Thumb Code   102  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08003a68   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08003ad0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08003ae4   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08003b10   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08003b2c   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08003b99   Thumb Code   156  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08003b98   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08003c34   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08003c70   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08003c84   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08003ca4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08003cf0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08003d14   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08003e10   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08003eb4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08003f38   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08003f60   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08003f8d   Thumb Code   198  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08003f8c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osThreadEntry                            0x08004055   Thumb Code     6  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x08004054   Section        0  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x0800405c   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08004078   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x080040fc   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x0800413c   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x0800417c   Section        0  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x080041c8   Section        0  rtx_timer.o(.text.osTimerStart)
    svcRtxKernelGetState                     0x08004205   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08004204   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x08004211   Thumb Code    20  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08004210   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x08004225   Thumb Code   348  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08004224   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08004381   Thumb Code   158  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08004380   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08004421   Thumb Code   448  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08004420   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x080045e1   Thumb Code   362  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080045e0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08004751   Thumb Code   328  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08004750   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxThreadExit                         0x08004899   Thumb Code   196  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08004898   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x0800495d   Thumb Code   334  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x0800495c   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x08004aad   Thumb Code   230  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08004aac   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadNew                          0x08004b95   Thumb Code   600  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08004b94   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxTimerNew                           0x08004df5   Thumb Code   202  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x08004df4   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x08004ec1   Thumb Code   194  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x08004ec0   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    i.__scatterload_copy                     0x08004f82   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08004f90   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08004f92   Section       14  handlers.o(i.__scatterload_zeroinit)
    __tagsym$$used.0                         0x08004fa0   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x08005010   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x08005058   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    ThreadAttr_ctrl                          0x080050a0   Data          36  app-rtos.o(.rodata.ThreadAttr_ctrl)
    [Anonymous Symbol]                       0x080050a0   Section        0  app-rtos.o(.rodata.ThreadAttr_ctrl)
    ThreadAttr_main                          0x080050c4   Data          36  app-rtos.o(.rodata.ThreadAttr_main)
    [Anonymous Symbol]                       0x080050c4   Section        0  app-rtos.o(.rodata.ThreadAttr_main)
    ThreadAttr_ref                           0x080050e8   Data          36  app-rtos.o(.rodata.ThreadAttr_ref)
    [Anonymous Symbol]                       0x080050e8   Section        0  app-rtos.o(.rodata.ThreadAttr_ref)
    os_idle_thread_attr                      0x08005110   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08005110   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08005134   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08005134   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x0800514c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x0800514c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08005170   Section        0  app-rtos.o(.rodata.str1.1)
    .L.str                                   0x08005180   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x08005180   Section        0  rtx_kernel.o(.rodata.str1.4)
    Peripheral_Encoder_CalculateVelocity.lastcycle_encoder 0x200000c8   Data           2  peripherals.o(.bss.Peripheral_Encoder_CalculateVelocity.lastcycle_encoder)
    [Anonymous Symbol]                       0x200000c8   Section        0  peripherals.o(.bss.Peripheral_Encoder_CalculateVelocity.lastcycle_encoder)
    Peripheral_Encoder_CalculateVelocity.lastcycle_ms 0x200000cc   Data           4  peripherals.o(.bss.Peripheral_Encoder_CalculateVelocity.lastcycle_ms)
    [Anonymous Symbol]                       0x200000cc   Section        0  peripherals.o(.bss.Peripheral_Encoder_CalculateVelocity.lastcycle_ms)
    EventBuffer                              0x200001c0   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x200001c0   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x200005c0   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20000640   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x20000668   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000668   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x200006a8   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x200086a8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x200086a8   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x200086ac   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x200086ac   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x200086e0   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x200086e0   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20008730   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20008730   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008780   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200087d0   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x200087d0   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x200089d0   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x200089d0   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    STACK                                    0x20008bf8   Section     1024  startup_stm32l476xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x00000188   Number         0  startup_stm32l476xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32l476xx.o(RESET)
    __Vectors_End                            0x08000188   Data           0  startup_stm32l476xx.o(RESET)
    __main                                   0x08000189   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x08000189   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x0800018d   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x08000191   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x08000191   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x08000191   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x08000191   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x08000199   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x08000199   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    SVC_Handler                              0x0800019d   Thumb Code   208  irq_armv7m.o(.text)
    PendSV_Handler                           0x0800026d   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x0800027d   Thumb Code    16  irq_armv7m.o(.text)
    Reset_Handler                            0x080002a9   Thumb Code     8  startup_stm32l476xx.o(.text)
    ADC1_2_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    ADC3_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_TX_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    COMP_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT0_IRQHandler                   0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT1_IRQHandler                   0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT2_IRQHandler                   0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT3_IRQHandler                   0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel2_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel3_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel4_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel5_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel6_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel7_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel1_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel2_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel3_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel4_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel5_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel6_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel7_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI0_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI15_10_IRQHandler                     0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI1_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI2_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI3_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI4_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI9_5_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    FLASH_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    FMC_IRQHandler                           0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    FPU_IRQHandler                           0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C1_ER_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C1_EV_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C2_ER_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C2_EV_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C3_ER_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C3_EV_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    LCD_IRQHandler                           0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPTIM1_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPTIM2_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPUART1_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    OTG_FS_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    PVD_PVM_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    QUADSPI_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    RCC_IRQHandler                           0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    RNG_IRQHandler                           0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SAI1_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SAI2_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SDMMC1_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI1_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI2_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI3_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    SWPMI1_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_CC_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM2_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM3_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM4_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM5_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM7_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_BRK_IRQHandler                      0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_CC_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_UP_IRQHandler                       0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    TSC_IRQHandler                           0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    UART4_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    UART5_IRQHandler                         0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART1_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART2_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART3_IRQHandler                        0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    WWDG_IRQHandler                          0x080002c3   Thumb Code     0  startup_stm32l476xx.o(.text)
    __aeabi_memcpy                           0x080002cd   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x080002cd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x080002cd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x080002f1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x080002f1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x080002f1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x080002ff   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x080002ff   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x080002ff   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000303   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x08000315   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x08000315   Thumb Code     0  init.o(.text)
    Application_Loop                         0x08000345   Thumb Code    12  app-rtos.o(.text.Application_Loop)
    Application_Setup                        0x08000351   Thumb Code   164  app-rtos.o(.text.Application_Setup)
    BusFault_Handler                         0x080003f5   Thumb Code     2  stm32l4xx_it.o(.text.BusFault_Handler)
    Controller_PIController                  0x080003f9   Thumb Code   196  controller.o(.text.Controller_PIController)
    Controller_Reset                         0x080004bd   Thumb Code    14  controller.o(.text.Controller_Reset)
    DebugMon_Handler                         0x080004cd   Thumb Code     2  stm32l4xx_it.o(.text.DebugMon_Handler)
    EventRecord2                             0x080004d1   Thumb Code   398  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x08000661   Thumb Code   696  eventrecorder.o(.text.EventRecord4)
    EventRecorderDisable                     0x08000921   Thumb Code   122  eventrecorder.o(.text.EventRecorderDisable)
    EventRecorderEnable                      0x0800099d   Thumb Code   120  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x08000a15   Thumb Code   724  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderStart                       0x08000cf1   Thumb Code   330  eventrecorder.o(.text.EventRecorderStart)
    EventRecorderTimerGetCount               0x08000e3d   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerGetFreq                0x08000e49   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    EventRecorderTimerSetup                  0x08000e55   Thumb Code    36  eventrecorder.o(.text.EventRecorderTimerSetup)
    EvrRtxDelayCompleted                     0x08000e79   Thumb Code    16  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxEventFlagsWaitTimeout              0x08000e89   Thumb Code    16  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08000e99   Thumb Code    12  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x08000ea5   Thumb Code    12  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetTickCount                 0x08000eb1   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    EvrRtxKernelInitialize                   0x08000ec1   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08000ed1   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x08000ee1   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08000ef1   Thumb Code    16  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08000f01   Thumb Code    32  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08000f21   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08000f31   Thumb Code    34  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x08000f55   Thumb Code    32  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08000f75   Thumb Code    34  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08000f99   Thumb Code    30  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08000fb9   Thumb Code    16  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x08000fc9   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x08000fd9   Thumb Code    12  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08000fe5   Thumb Code    32  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08001005   Thumb Code    34  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08001029   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08001039   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08001049   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x08001059   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08001069   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08001079   Thumb Code    32  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08001099   Thumb Code    34  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x080010bd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x080010cd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquireTimeout                0x080010dd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x080010ed   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexReleased                      0x080010fd   Thumb Code    16  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x0800110d   Thumb Code    16  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x0800111d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x0800112d   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08001145   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08001155   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08001161   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsError                   0x08001171   Thumb Code    12  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    EvrRtxThreadFlagsSet                     0x0800117d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    EvrRtxThreadFlagsSetDone                 0x0800118d   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    EvrRtxThreadFlagsWait                    0x0800119d   Thumb Code    34  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    EvrRtxThreadFlagsWaitCompleted           0x080011c1   Thumb Code    32  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitNotCompleted        0x080011e1   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    EvrRtxThreadFlagsWaitPending             0x080011f1   Thumb Code    34  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    EvrRtxThreadFlagsWaitTimeout             0x08001215   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadJoined                       0x08001225   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x08001235   Thumb Code    34  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x08001259   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x08001269   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x08001279   Thumb Code    16  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x08001289   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerCallback)
    EvrRtxTimerCreated                       0x08001299   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerCreated)
    EvrRtxTimerError                         0x080012a9   Thumb Code    12  rtx_evr.o(.text.EvrRtxTimerError)
    EvrRtxTimerNew                           0x080012b5   Thumb Code    32  rtx_evr.o(.text.EvrRtxTimerNew)
    EvrRtxTimerStart                         0x080012d5   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerStart)
    EvrRtxTimerStarted                       0x080012e5   Thumb Code    16  rtx_evr.o(.text.EvrRtxTimerStarted)
    HAL_GPIO_Init                            0x080012f5   Thumb Code   442  stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_Init)
    HAL_GPIO_WritePin                        0x080014b5   Thumb Code    12  stm32l4xx_hal_gpio_1.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x080014c1   Thumb Code    12  stm32l4xx_hal_1.o(.text.HAL_GetTick)
    HAL_Init                                 0x080014cd   Thumb Code    30  stm32l4xx_hal_1.o(.text.HAL_Init)
    HAL_InitTick                             0x080014ed   Thumb Code    90  stm32l4xx_hal_1.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08001549   Thumb Code    78  stm32l4xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_SetPriority                     0x08001599   Thumb Code    86  stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x080015f1   Thumb Code    32  stm32l4xx_hal_cortex_1.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_PWREx_ControlVoltageScaling          0x08001611   Thumb Code   134  stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_ControlVoltageScaling)
    HAL_PWREx_GetVoltageRange                0x08001699   Thumb Code    16  stm32l4xx_hal_pwr_ex_1.o(.text.HAL_PWREx_GetVoltageRange)
    HAL_RCC_ClockConfig                      0x080016a9   Thumb Code   530  stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_OscConfig                        0x080018bd   Thumb Code  1862  stm32l4xx_hal_rcc_1.o(.text.HAL_RCC_OscConfig)
    HAL_SYSTICK_Config                       0x08002005   Thumb Code    44  stm32l4xx_hal_cortex_1.o(.text.HAL_SYSTICK_Config)
    HAL_TIMEx_MasterConfigSynchronization    0x08002031   Thumb Code   198  stm32l4xx_hal_tim_ex_1.o(.text.HAL_TIMEx_MasterConfigSynchronization)
    HAL_TIM_Encoder_Init                     0x080020f9   Thumb Code   182  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Init)
    HAL_TIM_Encoder_MspInit                  0x080021b1   Thumb Code   110  stm32l4xx_hal_msp.o(.text.HAL_TIM_Encoder_MspInit)
    HAL_TIM_Encoder_Start                    0x08002221   Thumb Code   188  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_Encoder_Start)
    HAL_TIM_MspPostInit                      0x080022dd   Thumb Code   134  stm32l4xx_hal_msp.o(.text.HAL_TIM_MspPostInit)
    HAL_TIM_PWM_ConfigChannel                0x08002365   Thumb Code   902  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_ConfigChannel)
    HAL_TIM_PWM_Init                         0x080026ed   Thumb Code    98  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Init)
    HAL_TIM_PWM_MspInit                      0x08002751   Thumb Code    48  stm32l4xx_hal_msp.o(.text.HAL_TIM_PWM_MspInit)
    HAL_TIM_PWM_Start                        0x08002781   Thumb Code   402  stm32l4xx_hal_tim_1.o(.text.HAL_TIM_PWM_Start)
    HardFault_Handler                        0x08002915   Thumb Code     2  stm32l4xx_it.o(.text.HardFault_Handler)
    Main_GetTickMillisec                     0x08002919   Thumb Code     4  main.o(.text.Main_GetTickMillisec)
    MemManage_Handler                        0x0800291d   Thumb Code     2  stm32l4xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08002921   Thumb Code     2  stm32l4xx_it.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x08002925   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08002931   Thumb Code    50  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08002965   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x0800296d   Thumb Code    72  os_systick.o(.text.OS_Tick_Setup)
    Peripheral_Encoder_CalculateVelocity     0x080029b5   Thumb Code    90  peripherals.o(.text.Peripheral_Encoder_CalculateVelocity)
    Peripheral_GPIO_EnableMotor              0x08002a11   Thumb Code    16  peripherals.o(.text.Peripheral_GPIO_EnableMotor)
    Peripheral_PWM_ActuateMotor              0x08002a21   Thumb Code    62  peripherals.o(.text.Peripheral_PWM_ActuateMotor)
    SystemClock_Config                       0x08002a61   Thumb Code   122  main.o(.text.SystemClock_Config)
    SystemInit                               0x08002add   Thumb Code    18  system_stm32l4xx.o(.text.SystemInit)
    TIM_Base_SetConfig                       0x08002af1   Thumb Code   294  stm32l4xx_hal_tim_1.o(.text.TIM_Base_SetConfig)
    UsageFault_Handler                       0x08002c19   Thumb Code     2  stm32l4xx_it.o(.text.UsageFault_Handler)
    callback_signal_flags                    0x08002cdd   Thumb Code    42  app-rtos.o(.text.callback_signal_flags)
    main                                     0x08002d09   Thumb Code   434  main.o(.text.main)
    osKernelGetState                         0x08002ebd   Thumb Code    50  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x08002ef1   Thumb Code    50  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x08002f25   Thumb Code    54  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08002f5d   Thumb Code    50  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08002f91   Thumb Code   212  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08003065   Thumb Code   166  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxErrorNotify                         0x0800310d   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08003111   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelBeforeInit                    0x08003115   Thumb Code   244  rtx_lib.o(.text.osRtxKernelBeforeInit)
    osRtxKernelErrorNotify                   0x08003209   Thumb Code    22  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x08003221   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x080032a1   Thumb Code    88  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080032f9   Thumb Code    64  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08003339   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800337d   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080033d5   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x080035e9   Thumb Code    44  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08003615   Thumb Code   100  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08003679   Thumb Code    80  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x080036c9   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08003775   Thumb Code   118  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBeforeFree                    0x080037ed   Thumb Code     2  rtx_thread.o(.text.osRtxThreadBeforeFree)
    osRtxThreadDelayTick                     0x080037f1   Thumb Code   356  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08003955   Thumb Code   276  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08003ad1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08003ae5   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08003b11   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08003b2d   Thumb Code   106  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08003c35   Thumb Code    60  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08003c71   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08003c85   Thumb Code    32  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x08003ca5   Thumb Code    74  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08003cf1   Thumb Code    36  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08003d15   Thumb Code   250  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08003e11   Thumb Code   164  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08003eb5   Thumb Code   132  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08003f39   Thumb Code    38  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08003f61   Thumb Code    42  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x0800405d   Thumb Code    26  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x08004079   Thumb Code   130  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x080040fd   Thumb Code    64  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x0800413d   Thumb Code    64  rtx_thread.o(.text.osThreadNew)
    osTimerNew                               0x0800417d   Thumb Code    74  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x080041c9   Thumb Code    60  rtx_timer.o(.text.osTimerStart)
    __scatterload_copy                       0x08004f83   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08004f91   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08004f93   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    osRtxConfig                              0x08004fa0   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08005010   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x08005048   Data          16  system_stm32l4xx.o(.rodata.AHBPrescTable)
    EventRecorderInfo                        0x08005058   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    MSIRangeTable                            0x08005070   Data          48  system_stm32l4xx.o(.rodata.MSIRangeTable)
    osRtxUserSVC                             0x0800510c   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x0800518c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080051ac   Number         0  anon$$obj.o(Region$$Table)
    Ki                                       0x20000000   Data           4  controller.o(.data.Ki)
    Kp                                       0x20000004   Data           4  controller.o(.data.Kp)
    SystemCoreClock                          0x20000008   Data           4  system_stm32l4xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x2000000c   Data         164  rtx_kernel.o(.data.os)
    uwTickFreq                               0x200000b0   Data           1  stm32l4xx_hal_1.o(.data.uwTickFreq)
    uwTickPrio                               0x200000b4   Data           4  stm32l4xx_hal_1.o(.data.uwTickPrio)
    I                                        0x200000c0   Data           4  controller.o(.bss.I)
    P                                        0x200000c4   Data           4  controller.o(.bss.P)
    T_ID1                                    0x200000d0   Data           4  app-rtos.o(.bss.T_ID1)
    T_ID2                                    0x200000d4   Data           4  app-rtos.o(.bss.T_ID2)
    T_ID3                                    0x200000d8   Data           4  app-rtos.o(.bss.T_ID3)
    control                                  0x200000dc   Data           4  app-rtos.o(.bss.control)
    control_value                            0x200000e0   Data           4  controller.o(.bss.control_value)
    delta_ms                                 0x200000e4   Data           4  controller.o(.bss.delta_ms)
    difference_debug                         0x200000e8   Data           2  peripherals.o(.bss.difference_debug)
    encoder                                  0x200000ea   Data           2  peripherals.o(.bss.encoder)
    err                                      0x200000ec   Data           4  controller.o(.bss.err)
    htim1                                    0x200000f0   Data          76  main.o(.bss.htim1)
    htim3                                    0x2000013c   Data          76  main.o(.bss.htim3)
    millisec                                 0x20000188   Data           4  app-rtos.o(.bss.millisec)
    .bss.os.msgqueue.cb$$Base                0x200086ac   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x200086e0   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20008730   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200087d0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    prev_ms                                  0x20008bd0   Data           4  controller.o(.bss.prev_ms)
    reference                                0x20008bd4   Data           4  app-rtos.o(.bss.reference)
    reset                                    0x20008bd8   Data           1  controller.o(.bss.reset)
    scaled_vel                               0x20008bdc   Data           4  peripherals.o(.bss.scaled_vel)
    timer_ctrl                               0x20008be0   Data           4  app-rtos.o(.bss.timer_ctrl)
    timer_ref                                0x20008be4   Data           4  app-rtos.o(.bss.timer_ref)
    uwTick                                   0x20008be8   Data           4  stm32l4xx_hal_1.o(.bss.uwTick)
    vel_debug                                0x20008bec   Data           4  peripherals.o(.bss.vel_debug)
    velocity                                 0x20008bf0   Data           4  app-rtos.o(.bss.velocity)
    __initial_sp                             0x20008ff8   Data           0  startup_stm32l476xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080002a9

  Load Region LR_1 (Base: 0x08000000, Size: 0x00005264, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000051ac, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000188   Data   RO         1172    RESET               startup_stm32l476xx.o
    0x08000188   0x08000188   0x00000000   Code   RO         1916  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x08000188   0x08000188   0x00000004   Code   RO         1935    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x0800018c   0x0800018c   0x00000004   Code   RO         1938    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x08000190   0x08000190   0x00000000   Code   RO         1940    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x08000190   0x08000190   0x00000000   Code   RO         1942    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x08000190   0x08000190   0x00000008   Code   RO         1943    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x08000198   0x08000198   0x00000000   Code   RO         1945    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x08000198   0x08000198   0x00000000   Code   RO         1947    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x08000198   0x08000198   0x00000004   Code   RO         1936    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x0800019c   0x0800019c   0x0000010c   Code   RO          115    .text               irq_armv7m.o
    0x080002a8   0x080002a8   0x00000024   Code   RO         1173  * .text               startup_stm32l476xx.o
    0x080002cc   0x080002cc   0x00000024   Code   RO         1929    .text               mc_w.l(memcpya.o)
    0x080002f0   0x080002f0   0x00000024   Code   RO         1931    .text               mc_w.l(memseta.o)
    0x08000314   0x08000314   0x00000030   Code   RO         1949    .text               mc_w.l(init.o)
    0x08000344   0x08000344   0x0000000c   Code   RO           49    .text.Application_Loop  app-rtos.o
    0x08000350   0x08000350   0x000000a4   Code   RO           45    .text.Application_Setup  app-rtos.o
    0x080003f4   0x080003f4   0x00000002   Code   RO          103    .text.BusFault_Handler  stm32l4xx_it.o
    0x080003f6   0x080003f6   0x00000002   PAD
    0x080003f8   0x080003f8   0x000000c4   Code   RO            2    .text.Controller_PIController  controller.o
    0x080004bc   0x080004bc   0x0000000e   Code   RO            4    .text.Controller_Reset  controller.o
    0x080004ca   0x080004ca   0x00000002   PAD
    0x080004cc   0x080004cc   0x00000002   Code   RO          107    .text.DebugMon_Handler  stm32l4xx_it.o
    0x080004ce   0x080004ce   0x00000002   PAD
    0x080004d0   0x080004d0   0x0000018e   Code   RO         1114    .text.EventRecord2  eventrecorder.o
    0x0800065e   0x0800065e   0x00000002   PAD
    0x08000660   0x08000660   0x000002be   Code   RO         1116    .text.EventRecord4  eventrecorder.o
    0x0800091e   0x0800091e   0x00000002   PAD
    0x08000920   0x08000920   0x0000007a   Code   RO         1106    .text.EventRecorderDisable  eventrecorder.o
    0x0800099a   0x0800099a   0x00000002   PAD
    0x0800099c   0x0800099c   0x00000078   Code   RO         1102    .text.EventRecorderEnable  eventrecorder.o
    0x08000a14   0x08000a14   0x000002da   Code   RO         1100    .text.EventRecorderInitialize  eventrecorder.o
    0x08000cee   0x08000cee   0x00000002   PAD
    0x08000cf0   0x08000cf0   0x0000014a   Code   RO         1104    .text.EventRecorderStart  eventrecorder.o
    0x08000e3a   0x08000e3a   0x00000002   PAD
    0x08000e3c   0x08000e3c   0x0000000c   Code   RO         1098    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x08000e48   0x08000e48   0x0000000c   Code   RO         1096    .text.EventRecorderTimerGetFreq  eventrecorder.o
    0x08000e54   0x08000e54   0x00000024   Code   RO         1094    .text.EventRecorderTimerSetup  eventrecorder.o
    0x08000e78   0x08000e78   0x00000010   Code   RO          351    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x08000e88   0x08000e88   0x00000010   Code   RO          399    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x08000e98   0x08000e98   0x0000000c   Code   RO          189    .text.EvrRtxKernelError  rtx_evr.o
    0x08000ea4   0x08000ea4   0x0000000c   Code   RO          235    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x08000eb0   0x08000eb0   0x00000010   Code   RO          227    .text.EvrRtxKernelGetTickCount  rtx_evr.o
    0x08000ec0   0x08000ec0   0x00000010   Code   RO          191    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08000ed0   0x08000ed0   0x00000010   Code   RO          193    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x08000ee0   0x08000ee0   0x00000010   Code   RO          199    .text.EvrRtxKernelStart  rtx_evr.o
    0x08000ef0   0x08000ef0   0x00000010   Code   RO          201    .text.EvrRtxKernelStarted  rtx_evr.o
    0x08000f00   0x08000f00   0x00000020   Code   RO          179    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x08000f20   0x08000f20   0x00000010   Code   RO          185    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08000f30   0x08000f30   0x00000022   Code   RO          187    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x08000f52   0x08000f52   0x00000002   PAD
    0x08000f54   0x08000f54   0x00000020   Code   RO          183    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x08000f74   0x08000f74   0x00000022   Code   RO          181    .text.EvrRtxMemoryFree  rtx_evr.o
    0x08000f96   0x08000f96   0x00000002   PAD
    0x08000f98   0x08000f98   0x0000001e   Code   RO          177    .text.EvrRtxMemoryInit  rtx_evr.o
    0x08000fb6   0x08000fb6   0x00000002   PAD
    0x08000fb8   0x08000fb8   0x00000010   Code   RO          477    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x08000fc8   0x08000fc8   0x00000010   Code   RO          505    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x08000fd8   0x08000fd8   0x0000000c   Code   RO          501    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x08000fe4   0x08000fe4   0x00000020   Code   RO          521    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08001004   0x08001004   0x00000022   Code   RO          523    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08001026   0x08001026   0x00000002   PAD
    0x08001028   0x08001028   0x00000010   Code   RO          525    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08001038   0x08001038   0x00000010   Code   RO          515    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08001048   0x08001048   0x00000010   Code   RO          517    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08001058   0x08001058   0x00000010   Code   RO          519    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08001068   0x08001068   0x00000010   Code   RO          529    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08001078   0x08001078   0x00000020   Code   RO          509    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x08001098   0x08001098   0x00000022   Code   RO          511    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x080010ba   0x080010ba   0x00000002   PAD
    0x080010bc   0x080010bc   0x00000010   Code   RO          513    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x080010cc   0x080010cc   0x00000010   Code   RO          527    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x080010dc   0x080010dc   0x00000010   Code   RO          421    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x080010ec   0x080010ec   0x00000010   Code   RO          423    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x080010fc   0x080010fc   0x00000010   Code   RO          429    .text.EvrRtxMutexReleased  rtx_evr.o
    0x0800110c   0x0800110c   0x00000010   Code   RO          449    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x0800111c   0x0800111c   0x00000010   Code   RO          285    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x0800112c   0x0800112c   0x00000018   Code   RO          243    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08001144   0x08001144   0x00000010   Code   RO          297    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x08001154   0x08001154   0x0000000c   Code   RO          239    .text.EvrRtxThreadError  rtx_evr.o
    0x08001160   0x08001160   0x00000010   Code   RO          293    .text.EvrRtxThreadExit  rtx_evr.o
    0x08001170   0x08001170   0x0000000c   Code   RO          319    .text.EvrRtxThreadFlagsError  rtx_evr.o
    0x0800117c   0x0800117c   0x00000010   Code   RO          321    .text.EvrRtxThreadFlagsSet  rtx_evr.o
    0x0800118c   0x0800118c   0x00000010   Code   RO          323    .text.EvrRtxThreadFlagsSetDone  rtx_evr.o
    0x0800119c   0x0800119c   0x00000022   Code   RO          331    .text.EvrRtxThreadFlagsWait  rtx_evr.o
    0x080011be   0x080011be   0x00000002   PAD
    0x080011c0   0x080011c0   0x00000020   Code   RO          337    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x080011e0   0x080011e0   0x00000010   Code   RO          339    .text.EvrRtxThreadFlagsWaitNotCompleted  rtx_evr.o
    0x080011f0   0x080011f0   0x00000022   Code   RO          333    .text.EvrRtxThreadFlagsWaitPending  rtx_evr.o
    0x08001212   0x08001212   0x00000002   PAD
    0x08001214   0x08001214   0x00000010   Code   RO          335    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x08001224   0x08001224   0x00000010   Code   RO          283    .text.EvrRtxThreadJoined  rtx_evr.o
    0x08001234   0x08001234   0x00000022   Code   RO          241    .text.EvrRtxThreadNew  rtx_evr.o
    0x08001256   0x08001256   0x00000002   PAD
    0x08001258   0x08001258   0x00000010   Code   RO          289    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x08001268   0x08001268   0x00000010   Code   RO          291    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x08001278   0x08001278   0x00000010   Code   RO          287    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x08001288   0x08001288   0x00000010   Code   RO          355    .text.EvrRtxTimerCallback  rtx_evr.o
    0x08001298   0x08001298   0x00000010   Code   RO          359    .text.EvrRtxTimerCreated  rtx_evr.o
    0x080012a8   0x080012a8   0x0000000c   Code   RO          353    .text.EvrRtxTimerError  rtx_evr.o
    0x080012b4   0x080012b4   0x00000020   Code   RO          357    .text.EvrRtxTimerNew  rtx_evr.o
    0x080012d4   0x080012d4   0x00000010   Code   RO          363    .text.EvrRtxTimerStart  rtx_evr.o
    0x080012e4   0x080012e4   0x00000010   Code   RO          365    .text.EvrRtxTimerStarted  rtx_evr.o
    0x080012f4   0x080012f4   0x000001c0   Code   RO         1356    .text.HAL_GPIO_Init  stm32l4xx_hal_gpio_1.o
    0x080014b4   0x080014b4   0x0000000c   Code   RO         1362    .text.HAL_GPIO_WritePin  stm32l4xx_hal_gpio_1.o
    0x080014c0   0x080014c0   0x0000000c   Code   RO         1208    .text.HAL_GetTick   stm32l4xx_hal_1.o
    0x080014cc   0x080014cc   0x0000001e   Code   RO         1196    .text.HAL_Init      stm32l4xx_hal_1.o
    0x080014ea   0x080014ea   0x00000002   PAD
    0x080014ec   0x080014ec   0x0000005a   Code   RO         1198    .text.HAL_InitTick  stm32l4xx_hal_1.o
    0x08001546   0x08001546   0x00000002   PAD
    0x08001548   0x08001548   0x0000004e   Code   RO         1151    .text.HAL_MspInit   stm32l4xx_hal_msp.o
    0x08001596   0x08001596   0x00000002   PAD
    0x08001598   0x08001598   0x00000056   Code   RO         1279    .text.HAL_NVIC_SetPriority  stm32l4xx_hal_cortex_1.o
    0x080015ee   0x080015ee   0x00000002   PAD
    0x080015f0   0x080015f0   0x00000020   Code   RO         1277    .text.HAL_NVIC_SetPriorityGrouping  stm32l4xx_hal_cortex_1.o
    0x08001610   0x08001610   0x00000086   Code   RO         1422    .text.HAL_PWREx_ControlVoltageScaling  stm32l4xx_hal_pwr_ex_1.o
    0x08001696   0x08001696   0x00000002   PAD
    0x08001698   0x08001698   0x00000010   Code   RO         1420    .text.HAL_PWREx_GetVoltageRange  stm32l4xx_hal_pwr_ex_1.o
    0x080016a8   0x080016a8   0x00000212   Code   RO         1512    .text.HAL_RCC_ClockConfig  stm32l4xx_hal_rcc_1.o
    0x080018ba   0x080018ba   0x00000002   PAD
    0x080018bc   0x080018bc   0x00000746   Code   RO         1508    .text.HAL_RCC_OscConfig  stm32l4xx_hal_rcc_1.o
    0x08002002   0x08002002   0x00000002   PAD
    0x08002004   0x08002004   0x0000002c   Code   RO         1289    .text.HAL_SYSTICK_Config  stm32l4xx_hal_cortex_1.o
    0x08002030   0x08002030   0x000000c6   Code   RO         1887    .text.HAL_TIMEx_MasterConfigSynchronization  stm32l4xx_hal_tim_ex_1.o
    0x080020f6   0x080020f6   0x00000002   PAD
    0x080020f8   0x080020f8   0x000000b6   Code   RO         1706    .text.HAL_TIM_Encoder_Init  stm32l4xx_hal_tim_1.o
    0x080021ae   0x080021ae   0x00000002   PAD
    0x080021b0   0x080021b0   0x0000006e   Code   RO         1153    .text.HAL_TIM_Encoder_MspInit  stm32l4xx_hal_msp.o
    0x0800221e   0x0800221e   0x00000002   PAD
    0x08002220   0x08002220   0x000000bc   Code   RO         1714    .text.HAL_TIM_Encoder_Start  stm32l4xx_hal_tim_1.o
    0x080022dc   0x080022dc   0x00000086   Code   RO         1157    .text.HAL_TIM_MspPostInit  stm32l4xx_hal_msp.o
    0x08002362   0x08002362   0x00000002   PAD
    0x08002364   0x08002364   0x00000386   Code   RO         1746    .text.HAL_TIM_PWM_ConfigChannel  stm32l4xx_hal_tim_1.o
    0x080026ea   0x080026ea   0x00000002   PAD
    0x080026ec   0x080026ec   0x00000062   Code   RO         1646    .text.HAL_TIM_PWM_Init  stm32l4xx_hal_tim_1.o
    0x0800274e   0x0800274e   0x00000002   PAD
    0x08002750   0x08002750   0x00000030   Code   RO         1155    .text.HAL_TIM_PWM_MspInit  stm32l4xx_hal_msp.o
    0x08002780   0x08002780   0x00000192   Code   RO         1654    .text.HAL_TIM_PWM_Start  stm32l4xx_hal_tim_1.o
    0x08002912   0x08002912   0x00000002   PAD
    0x08002914   0x08002914   0x00000002   Code   RO           99    .text.HardFault_Handler  stm32l4xx_it.o
    0x08002916   0x08002916   0x00000002   PAD
    0x08002918   0x08002918   0x00000004   Code   RO           78    .text.Main_GetTickMillisec  main.o
    0x0800291c   0x0800291c   0x00000002   Code   RO          101    .text.MemManage_Handler  stm32l4xx_it.o
    0x0800291e   0x0800291e   0x00000002   PAD
    0x08002920   0x08002920   0x00000002   Code   RO           97    .text.NMI_Handler   stm32l4xx_it.o
    0x08002922   0x08002922   0x00000002   PAD
    0x08002924   0x08002924   0x0000000c   Code   RO         1062    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x08002930   0x08002930   0x00000032   Code   RO         1058    .text.OS_Tick_Enable  os_systick.o
    0x08002962   0x08002962   0x00000002   PAD
    0x08002964   0x08002964   0x00000006   Code   RO         1064    .text.OS_Tick_GetIRQn  os_systick.o
    0x0800296a   0x0800296a   0x00000002   PAD
    0x0800296c   0x0800296c   0x00000048   Code   RO         1056    .text.OS_Tick_Setup  os_systick.o
    0x080029b4   0x080029b4   0x0000005a   Code   RO           29    .text.Peripheral_Encoder_CalculateVelocity  peripherals.o
    0x08002a0e   0x08002a0e   0x00000002   PAD
    0x08002a10   0x08002a10   0x00000010   Code   RO           23    .text.Peripheral_GPIO_EnableMotor  peripherals.o
    0x08002a20   0x08002a20   0x0000003e   Code   RO           27    .text.Peripheral_PWM_ActuateMotor  peripherals.o
    0x08002a5e   0x08002a5e   0x00000002   PAD
    0x08002a60   0x08002a60   0x0000007a   Code   RO           82    .text.SystemClock_Config  main.o
    0x08002ada   0x08002ada   0x00000002   PAD
    0x08002adc   0x08002adc   0x00000012   Code   RO         1180    .text.SystemInit    system_stm32l4xx.o
    0x08002aee   0x08002aee   0x00000002   PAD
    0x08002af0   0x08002af0   0x00000126   Code   RO         1596    .text.TIM_Base_SetConfig  stm32l4xx_hal_tim_1.o
    0x08002c16   0x08002c16   0x00000002   PAD
    0x08002c18   0x08002c18   0x00000002   Code   RO          105    .text.UsageFault_Handler  stm32l4xx_it.o
    0x08002c1a   0x08002c1a   0x00000002   PAD
    0x08002c1c   0x08002c1c   0x0000004a   Code   RO           51    .text.app_ctrl      app-rtos.o
    0x08002c66   0x08002c66   0x00000002   PAD
    0x08002c68   0x08002c68   0x00000056   Code   RO           55    .text.app_main      app-rtos.o
    0x08002cbe   0x08002cbe   0x00000002   PAD
    0x08002cc0   0x08002cc0   0x0000001c   Code   RO           53    .text.app_ref       app-rtos.o
    0x08002cdc   0x08002cdc   0x0000002a   Code   RO           47    .text.callback_signal_flags  app-rtos.o
    0x08002d06   0x08002d06   0x00000002   PAD
    0x08002d08   0x08002d08   0x000001b2   Code   RO           80    .text.main          main.o
    0x08002eba   0x08002eba   0x00000002   PAD
    0x08002ebc   0x08002ebc   0x00000032   Code   RO          565    .text.osKernelGetState  rtx_kernel.o
    0x08002eee   0x08002eee   0x00000002   PAD
    0x08002ef0   0x08002ef0   0x00000032   Code   RO          589    .text.osKernelGetTickCount  rtx_kernel.o
    0x08002f22   0x08002f22   0x00000002   PAD
    0x08002f24   0x08002f24   0x00000036   Code   RO          559    .text.osKernelInitialize  rtx_kernel.o
    0x08002f5a   0x08002f5a   0x00000002   PAD
    0x08002f5c   0x08002f5c   0x00000032   Code   RO          569    .text.osKernelStart  rtx_kernel.o
    0x08002f8e   0x08002f8e   0x00000002   PAD
    0x08002f90   0x08002f90   0x000000d4   Code   RO          728    .text.osMessageQueueGet  rtx_msgqueue.o
    0x08003064   0x08003064   0x000000a6   Code   RO          726    .text.osMessageQueuePut  rtx_msgqueue.o
    0x0800310a   0x0800310a   0x00000002   PAD
    0x0800310c   0x0800310c   0x00000002   Code   RO         1085    .text.osRtxErrorNotify  rtx_config.o
    0x0800310e   0x0800310e   0x00000002   PAD
    0x08003110   0x08003110   0x00000002   Code   RO         1083    .text.osRtxIdleThread  rtx_config.o
    0x08003112   0x08003112   0x00000002   PAD
    0x08003114   0x08003114   0x000000f4   Code   RO          629    .text.osRtxKernelBeforeInit  rtx_lib.o
    0x08003208   0x08003208   0x00000016   Code   RO          557    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x0800321e   0x0800321e   0x00000002   PAD
    0x08003220   0x08003220   0x00000080   Code   RO          652    .text.osRtxMemoryAlloc  rtx_memory.o
    0x080032a0   0x080032a0   0x00000058   Code   RO          654    .text.osRtxMemoryFree  rtx_memory.o
    0x080032f8   0x080032f8   0x00000040   Code   RO          650    .text.osRtxMemoryInit  rtx_memory.o
    0x08003338   0x08003338   0x00000044   Code   RO          666    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800337c   0x0800337c   0x00000056   Code   RO          668    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x080033d2   0x080033d2   0x00000002   PAD
    0x080033d4   0x080033d4   0x00000056   Code   RO          664    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x0800342a   0x0800342a   0x00000002   PAD
    0x0800342c   0x0800342c   0x000001bc   Code   RO          750    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x080035e8   0x080035e8   0x0000002c   Code   RO          716    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x08003614   0x08003614   0x00000064   Code   RO          768    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x08003678   0x08003678   0x00000050   Code   RO          770    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x080036c8   0x080036c8   0x000000ac   Code   RO          840    .text.osRtxPendSV_Handler  rtx_system.o
    0x08003774   0x08003774   0x00000076   Code   RO          842    .text.osRtxPostProcess  rtx_system.o
    0x080037ea   0x080037ea   0x00000002   PAD
    0x080037ec   0x080037ec   0x00000002   Code   RO          884    .text.osRtxThreadBeforeFree  rtx_thread.o
    0x080037ee   0x080037ee   0x00000002   PAD
    0x080037f0   0x080037f0   0x00000164   Code   RO          864    .text.osRtxThreadDelayTick  rtx_thread.o
    0x08003954   0x08003954   0x00000114   Code   RO          870    .text.osRtxThreadDispatch  rtx_thread.o
    0x08003a68   0x08003a68   0x00000066   Code   RO          882    .text.osRtxThreadFree  rtx_thread.o
    0x08003ace   0x08003ace   0x00000002   PAD
    0x08003ad0   0x08003ad0   0x00000014   Code   RO          854    .text.osRtxThreadListGet  rtx_thread.o
    0x08003ae4   0x08003ae4   0x0000002c   Code   RO          852    .text.osRtxThreadListPut  rtx_thread.o
    0x08003b10   0x08003b10   0x0000001a   Code   RO          858    .text.osRtxThreadListRemove  rtx_thread.o
    0x08003b2a   0x08003b2a   0x00000002   PAD
    0x08003b2c   0x08003b2c   0x0000006a   Code   RO          856    .text.osRtxThreadListSort  rtx_thread.o
    0x08003b96   0x08003b96   0x00000002   PAD
    0x08003b98   0x08003b98   0x0000009c   Code   RO          964    .text.osRtxThreadPostProcess  rtx_thread.o
    0x08003c34   0x08003c34   0x0000003c   Code   RO          860    .text.osRtxThreadReadyPut  rtx_thread.o
    0x08003c70   0x08003c70   0x00000014   Code   RO          866    .text.osRtxThreadRegPtr  rtx_thread.o
    0x08003c84   0x08003c84   0x00000020   Code   RO          876    .text.osRtxThreadStackCheck  rtx_thread.o
    0x08003ca4   0x08003ca4   0x0000004a   Code   RO          886    .text.osRtxThreadStartup  rtx_thread.o
    0x08003cee   0x08003cee   0x00000002   PAD
    0x08003cf0   0x08003cf0   0x00000024   Code   RO          868    .text.osRtxThreadSwitch  rtx_thread.o
    0x08003d14   0x08003d14   0x000000fa   Code   RO          874    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x08003e0e   0x08003e0e   0x00000002   PAD
    0x08003e10   0x08003e10   0x000000a4   Code   RO          872    .text.osRtxThreadWaitExit  rtx_thread.o
    0x08003eb4   0x08003eb4   0x00000084   Code   RO          838    .text.osRtxTick_Handler  rtx_system.o
    0x08003f38   0x08003f38   0x00000026   Code   RO         1018    .text.osRtxTimerSetup  rtx_timer.o
    0x08003f5e   0x08003f5e   0x00000002   PAD
    0x08003f60   0x08003f60   0x0000002a   Code   RO         1022    .text.osRtxTimerThread  rtx_timer.o
    0x08003f8a   0x08003f8a   0x00000002   PAD
    0x08003f8c   0x08003f8c   0x000000c6   Code   RO         1020    .text.osRtxTimerTick  rtx_timer.o
    0x08004052   0x08004052   0x00000002   PAD
    0x08004054   0x08004054   0x00000006   Code   RO          962    .text.osThreadEntry  rtx_thread.o
    0x0800405a   0x0800405a   0x00000002   PAD
    0x0800405c   0x0800405c   0x0000001a   Code   RO          928    .text.osThreadExit  rtx_thread.o
    0x08004076   0x08004076   0x00000002   PAD
    0x08004078   0x08004078   0x00000082   Code   RO          954    .text.osThreadFlagsSet  rtx_thread.o
    0x080040fa   0x080040fa   0x00000002   PAD
    0x080040fc   0x080040fc   0x00000040   Code   RO          960    .text.osThreadFlagsWait  rtx_thread.o
    0x0800413c   0x0800413c   0x00000040   Code   RO          890    .text.osThreadNew   rtx_thread.o
    0x0800417c   0x0800417c   0x0000004a   Code   RO         1024    .text.osTimerNew    rtx_timer.o
    0x080041c6   0x080041c6   0x00000002   PAD
    0x080041c8   0x080041c8   0x0000003c   Code   RO         1030    .text.osTimerStart  rtx_timer.o
    0x08004204   0x08004204   0x0000000c   Code   RO          567    .text.svcRtxKernelGetState  rtx_kernel.o
    0x08004210   0x08004210   0x00000014   Code   RO          591    .text.svcRtxKernelGetTickCount  rtx_kernel.o
    0x08004224   0x08004224   0x0000015c   Code   RO          605    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x08004380   0x08004380   0x0000009e   Code   RO          607    .text.svcRtxKernelStart  rtx_kernel.o
    0x0800441e   0x0800441e   0x00000002   PAD
    0x08004420   0x08004420   0x000001c0   Code   RO          754    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x080045e0   0x080045e0   0x00000170   Code   RO          718    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x08004750   0x08004750   0x00000148   Code   RO          752    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08004898   0x08004898   0x000000c4   Code   RO          986    .text.svcRtxThreadExit  rtx_thread.o
    0x0800495c   0x0800495c   0x0000014e   Code   RO         1002    .text.svcRtxThreadFlagsSet  rtx_thread.o
    0x08004aaa   0x08004aaa   0x00000002   PAD
    0x08004aac   0x08004aac   0x000000e6   Code   RO         1008    .text.svcRtxThreadFlagsWait  rtx_thread.o
    0x08004b92   0x08004b92   0x00000002   PAD
    0x08004b94   0x08004b94   0x0000025e   Code   RO          888    .text.svcRtxThreadNew  rtx_thread.o
    0x08004df2   0x08004df2   0x00000002   PAD
    0x08004df4   0x08004df4   0x000000ca   Code   RO         1038    .text.svcRtxTimerNew  rtx_timer.o
    0x08004ebe   0x08004ebe   0x00000002   PAD
    0x08004ec0   0x08004ec0   0x000000c2   Code   RO         1040    .text.svcRtxTimerStart  rtx_timer.o
    0x08004f82   0x08004f82   0x0000000e   Code   RO         1953    i.__scatterload_copy  mc_w.l(handlers.o)
    0x08004f90   0x08004f90   0x00000002   Code   RO         1954    i.__scatterload_null  mc_w.l(handlers.o)
    0x08004f92   0x08004f92   0x0000000e   Code   RO         1955    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x08004fa0   0x08004fa0   0x00000070   Data   RO          635    .rodata             rtx_lib.o
    0x08005010   0x08005010   0x00000038   Data   RO          638    .rodata             rtx_lib.o
    0x08005048   0x08005048   0x00000010   Data   RO         1185    .rodata.AHBPrescTable  system_stm32l4xx.o
    0x08005058   0x08005058   0x00000018   Data   RO         1119    .rodata.EventRecorderInfo  eventrecorder.o
    0x08005070   0x08005070   0x00000030   Data   RO         1187    .rodata.MSIRangeTable  system_stm32l4xx.o
    0x080050a0   0x080050a0   0x00000024   Data   RO           63    .rodata.ThreadAttr_ctrl  app-rtos.o
    0x080050c4   0x080050c4   0x00000024   Data   RO           65    .rodata.ThreadAttr_main  app-rtos.o
    0x080050e8   0x080050e8   0x00000024   Data   RO           61    .rodata.ThreadAttr_ref  app-rtos.o
    0x0800510c   0x0800510c   0x00000004   Data   RO          637    .rodata.osRtxUserSVC  rtx_lib.o
    0x08005110   0x08005110   0x00000024   Data   RO          632    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08005134   0x08005134   0x00000018   Data   RO          634    .rodata.os_timer_mq_attr  rtx_lib.o
    0x0800514c   0x0800514c   0x00000024   Data   RO          633    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08005170   0x08005170   0x0000000e   Data   RO           69    .rodata.str1.1      app-rtos.o
    0x0800517e   0x0800517e   0x00000002   PAD
    0x08005180   0x08005180   0x0000000b   Data   RO          619    .rodata.str1.4      rtx_kernel.o
    0x0800518b   0x0800518b   0x00000001   PAD
    0x0800518c   0x0800518c   0x00000020   Data   RO         1952    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080051ac, Size: 0x000000b8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080051ac   0x00000004   Data   RW            7    .data.Ki            controller.o
    0x20000004   0x080051b0   0x00000004   Data   RW            6    .data.Kp            controller.o
    0x20000008   0x080051b4   0x00000004   Data   RW         1184    .data.SystemCoreClock  system_stm32l4xx.o
    0x2000000c   0x080051b8   0x000000a4   Data   RW          620    .data.os            rtx_kernel.o
    0x200000b0   0x0800525c   0x00000001   Data   RW         1267    .data.uwTickFreq    stm32l4xx_hal_1.o
    0x200000b1   0x0800525d   0x00000003   PAD
    0x200000b4   0x08005260   0x00000004   Data   RW         1266    .data.uwTickPrio    stm32l4xx_hal_1.o


    Execution Region ER_ZI (Exec base: 0x200000c0, Load base: 0x08005264, Size: 0x00008f38, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000c0        -       0x00000004   Zero   RW           11    .bss.I              controller.o
    0x200000c4        -       0x00000004   Zero   RW           14    .bss.P              controller.o
    0x200000c8        -       0x00000002   Zero   RW           33    .bss.Peripheral_Encoder_CalculateVelocity.lastcycle_encoder  peripherals.o
    0x200000ca   0x08005264   0x00000002   PAD
    0x200000cc        -       0x00000004   Zero   RW           34    .bss.Peripheral_Encoder_CalculateVelocity.lastcycle_ms  peripherals.o
    0x200000d0        -       0x00000004   Zero   RW           62    .bss.T_ID1          app-rtos.o
    0x200000d4        -       0x00000004   Zero   RW           64    .bss.T_ID2          app-rtos.o
    0x200000d8        -       0x00000004   Zero   RW           66    .bss.T_ID3          app-rtos.o
    0x200000dc        -       0x00000004   Zero   RW           59    .bss.control        app-rtos.o
    0x200000e0        -       0x00000004   Zero   RW           12    .bss.control_value  controller.o
    0x200000e4        -       0x00000004   Zero   RW            9    .bss.delta_ms       controller.o
    0x200000e8        -       0x00000002   Zero   RW           36    .bss.difference_debug  peripherals.o
    0x200000ea        -       0x00000002   Zero   RW           35    .bss.encoder        peripherals.o
    0x200000ec        -       0x00000004   Zero   RW           10    .bss.err            controller.o
    0x200000f0        -       0x0000004c   Zero   RW           86    .bss.htim1          main.o
    0x2000013c        -       0x0000004c   Zero   RW           87    .bss.htim3          main.o
    0x20000188        -       0x00000004   Zero   RW           60    .bss.millisec       app-rtos.o
    0x2000018c   0x08005264   0x00000034   PAD
    0x200001c0        -       0x000004a4   Zero   RW         1118    .bss.noinit         eventrecorder.o
    0x20000664   0x08005264   0x00000004   PAD
    0x20000668        -       0x00008040   Zero   RW          631    .bss.os             rtx_lib.o
    0x200086a8        -       0x00000001   Zero   RW         1074    .bss.os             os_systick.o
    0x200086a9   0x08005264   0x00000003   PAD
    0x200086ac        -       0x00000034   Zero   RW          642    .bss.os.msgqueue.cb  rtx_lib.o
    0x200086e0        -       0x00000050   Zero   RW          643    .bss.os.msgqueue.mem  rtx_lib.o
    0x20008730        -       0x000000a0   Zero   RW          639    .bss.os.thread.cb   rtx_lib.o
    0x200087d0        -       0x00000200   Zero   RW          640    .bss.os.thread.idle.stack  rtx_lib.o
    0x200089d0        -       0x00000200   Zero   RW          641    .bss.os.thread.timer.stack  rtx_lib.o
    0x20008bd0        -       0x00000004   Zero   RW            8    .bss.prev_ms        controller.o
    0x20008bd4        -       0x00000004   Zero   RW           57    .bss.reference      app-rtos.o
    0x20008bd8        -       0x00000001   Zero   RW           13    .bss.reset          controller.o
    0x20008bd9   0x08005264   0x00000003   PAD
    0x20008bdc        -       0x00000004   Zero   RW           31    .bss.scaled_vel     peripherals.o
    0x20008be0        -       0x00000004   Zero   RW           67    .bss.timer_ctrl     app-rtos.o
    0x20008be4        -       0x00000004   Zero   RW           68    .bss.timer_ref      app-rtos.o
    0x20008be8        -       0x00000004   Zero   RW         1268    .bss.uwTick         stm32l4xx_hal_1.o
    0x20008bec        -       0x00000004   Zero   RW           32    .bss.vel_debug      peripherals.o
    0x20008bf0        -       0x00000004   Zero   RW           58    .bss.velocity       app-rtos.o
    0x20008bf4   0x08005264   0x00000004   PAD
    0x20008bf8        -       0x00000400   Zero   RW         1170    STACK               startup_stm32l476xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       406          0        122          0         36       4234   app-rtos.o
       210          0          0          8         25       1318   controller.o
      2462          0         24          0       1188      22222   eventrecorder.o
       268         16          0          0          0        801   irq_armv7m.o
       560          0          0          0        152       8845   main.o
       140          0          0          0          1       4997   os_systick.o
       168          0          0          0         18       2634   peripherals.o
         4          0          0          0          0        684   rtx_config.o
      1132          0          0          0          0      39452   rtx_evr.o
       764          0         11        164          0      22010   rtx_kernel.o
       244          0        268          0      34148       6309   rtx_lib.o
       280          0          0          0          0       2843   rtx_memory.o
       240          0          0          0          0      19809   rtx_mempool.o
      2010          0          0          0          0      24233   rtx_msgqueue.o
       180          0          0          0          0      11748   rtx_mutex.o
       422         36          0          0          0       5682   rtx_system.o
      3380         10          0          0          0      51845   rtx_thread.o
       808          0          0          0          0      12259   rtx_timer.o
        36          8        392          0       1024        880   startup_stm32l476xx.o
       132          0          0          5          4       9123   stm32l4xx_hal_1.o
       162          0          0          0          0      10797   stm32l4xx_hal_cortex_1.o
       460          0          0          0          0       5492   stm32l4xx_hal_gpio_1.o
       370          0          0          0          0       8546   stm32l4xx_hal_msp.o
       150          0          0          0          0      10037   stm32l4xx_hal_pwr_ex_1.o
      2392          0          0          0          0      11720   stm32l4xx_hal_rcc_1.o
      2066         16          0          0          0      58618   stm32l4xx_hal_tim_1.o
       198          0          0          0          0      22971   stm32l4xx_hal_tim_ex_1.o
        12          0          0          0          0        836   stm32l4xx_it.o
        18          0         64          4          0       3166   system_stm32l4xx.o

    ----------------------------------------------------------------------
     19822         86        916        184      36664     384111   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       148          0          3          3         68          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o

    ----------------------------------------------------------------------
       170         18          0          0          0        244   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       170         18          0          0          0        244   mc_w.l

    ----------------------------------------------------------------------
       170         18          0          0          0        244   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     19992        104        916        184      36664     383987   Grand Totals
     19992        104        916        184      36664     383987   ELF Image Totals
     19992        104        916        184          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20908 (  20.42kB)
    Total RW  Size (RW Data + ZI Data)             36848 (  35.98kB)
    Total ROM Size (Code + RO Data + RW Data)      21092 (  20.60kB)

==============================================================================

